{"version":3,"sources":["components/Nav.js","services/playlists.js","components/PlaylistItem.js","components/Playlist.js","components/Side.js","services/results.js","components/Result.js","components/Results.js","services/users.js","components/RegisterForm.js","components/LoginForm.js","App.js","index.js"],"names":["Container","styled","div","Logo","User","Nav","isLoggedIn","setIsLoggedIn","setUser","user","src","alt","id","Button","variant","onClick","window","localStorage","clear","baseUrl","token","object","getAllPlaylists","a","config","headers","Authorization","axios","get","request","create","newPlaylistItem","post","deleteItemFromPlaylist","item_id","playlist_id","request_body","put","setToken","newToken","addToPlaylist","result_id","updated","List","li","PlaylistItem","playlists","setPlaylists","playlist","playlist_item","useState","noItems","setNoItems","useEffect","length","handleClick","playlistApi","savedPlaylists","data","name","artist","Form","BootstrapForm","PlaylistContainer","Playlist","results","setResults","onStart","playlistName","setPlaylistName","handleSubmit","event","preventDefault","newPlaylist","playlistsApi","savedPlaylist","concat","console","log","message","toast","info","map","playlist_items","item","onSubmit","Control","type","value","onChange","target","Column","BootstrapColumn","Side","md","xs","getAll","getAllSelected","update","updatedObject","findResultNotFromPlaylist","Modal","BootstrapModal","Card","BootstrapCard","ButtonColumnContainer","Col","Result","result","show","setShow","handleClose","playlistId","resultId","playlistToFind","find","resultsApi","response","cardState","isAdded","sm","lg","xl","size","onHide","Header","Title","Body","className","imgSource","Row","ResultsContainer","BootstrapContainer","FormControl","Results","searchItem","setSearchItem","filteredResults","setFilteredResults","pattern","RegExp","filter","test","resultsCounter","placeholder","autoComplete","noGutters","users","newObject","login","credentials","BootstrapButton","ButtonContainer","ImageContainer","form","InputContainer","Input","LinkContainer","RegisterForm","isRegistered","setIsRegistered","username","setUsername","setName","password","setPassword","newUser","usersProvider","responseData","status","htmlFor","LoginForm","newestOnTop","autoClose","AppContainer","props","ResultsColumn","App","loggedUserJSON","getItem","JSON","parse","then","mainContainer","fluid","userCredentials","usersApi","setItem","stringify","error","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.89e620c4.chunk.js","sourcesContent":["import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Button } from 'react-bootstrap'\r\n\r\nconst Container = styled.div`\r\n\tbackground-color: #fff;\r\n\tdisplay: flex;\r\n\tflex-flow: row wrap;\r\n\tjustify-content: space-between;\r\n\tpadding: 20px 20px;\r\n\tmargin-bottom: 10px;\r\n\tmargin-top: 10px;\r\n\tborder-radius: 8px;\r\n`\r\nconst Logo = styled.div`\r\n\tanimation-name: rotate-logo;\r\n\tanimation-duration: 1.7s;\r\n\r\n\tdisplay: flex;\r\n\tflex-flow: row;\r\n\tcolor: #fff;\r\n\r\n\timg {\r\n\t\twidth: 50px;\r\n\t}\r\n`\r\nconst User = styled.div`\r\n\tanimation-name: move-user;\r\n\tanimation-duration: 1.7s;\r\n\tbutton {\r\n\t\tmargin-right: 10px;\r\n\t\tcolor: #fff;\r\n\t\tfont-size: 1.1rem;\r\n\t}\r\n`\r\n\r\nconst Nav = ({ isLoggedIn, setIsLoggedIn, user, setUser }) => {\r\n\tconst handleClick = () => {\r\n\t\tsetIsLoggedIn(!isLoggedIn)\r\n\t\tsetUser(null)\r\n\t\twindow.localStorage.clear()\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<Logo>\r\n\t\t\t\t<img src='images/logo2.svg' alt='' id='logo' />\r\n\t\t\t</Logo>\r\n\r\n\t\t\t<User>\r\n\t\t\t\t<Button variant='warning' onClick={handleClick}>\r\n\t\t\t\t\tLogout\r\n\t\t\t\t</Button>\r\n\t\t\t\t<img src='images/user.svg' alt='' />\r\n\t\t\t</User>\r\n\t\t</Container>\r\n\t)\r\n}\r\nexport default Nav\r\n","import axios from 'axios'\r\n\r\nconst baseUrl = '/api/playlist'\r\n\r\nlet token = null\r\n\r\nconst setToken = (newToken) => {\r\n\ttoken = `bearer ${newToken}`\r\n}\r\n\r\nconst getAllPlaylists = async () => {\r\n\tconst config = {\r\n\t\theaders: { Authorization: token },\r\n\t}\r\n\tconst request = await axios.get(baseUrl, config)\r\n\r\n\treturn request\r\n}\r\n\r\nconst create = async (newPlaylistItem) => {\r\n\tconst config = {\r\n\t\theaders: { Authorization: token },\r\n\t}\r\n\r\n\treturn await axios.post(baseUrl, newPlaylistItem, config)\r\n}\r\n\r\nconst deleteItemFromPlaylist = async (item_id, playlist_id) => {\r\n\tconst request_body = {\r\n\t\tplaylist_id,\r\n\t}\r\n\r\n\treturn await axios.put(`${baseUrl}/${item_id}`, request_body)\r\n}\r\n\r\nconst addToPlaylist = async (playlist_id, result_id) => {\r\n\tconst updated = {\r\n\t\tplaylist_id,\r\n\t\tresult_id,\r\n\t}\r\n\r\n\treturn await axios.put(`${baseUrl}/result/${result_id}`, updated)\r\n}\r\n\r\nconst object = {\r\n\tgetAllPlaylists,\r\n\tcreate,\r\n\tdeleteItemFromPlaylist,\r\n\tsetToken,\r\n\taddToPlaylist,\r\n}\r\n\r\nexport default object\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Button } from 'react-bootstrap'\r\nimport playlistApi from '../services/playlists'\r\nimport styled from 'styled-components'\r\n\r\nconst List = styled.li`\r\n\tline-height: 2rem;\r\n\tdisplay: flex;\r\n\tflex-flow: row;\r\n\tjustify-content: space-between;\r\n\tmin-width: 200px;\r\n\tmax-width: 400px;\r\n\tborder: 1px solid #aaa;\r\n\tborder-radius: 3px;\r\n\tmargin-bottom: 10px;\r\n\tpadding: 10px;\r\n`\r\n\r\nconst PlaylistItem = ({ playlists, setPlaylists, playlist, playlist_item }) => {\r\n\tconst [noItems, setNoItems] = useState(false)\r\n\r\n\tuseEffect(() => {\r\n\t\tif (playlist_item.length === 0) {\r\n\t\t\tsetNoItems(true)\r\n\t\t}\r\n\t}, [playlist_item.length])\r\n\r\n\tconst handleClick = async (item_id, playlist_id) => {\r\n\t\tawait playlistApi.deleteItemFromPlaylist(item_id, playlist_id)\r\n\r\n\t\tconst savedPlaylists = await playlistApi.getAllPlaylists()\r\n\t\tsetPlaylists(savedPlaylists.data)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<List>\r\n\t\t\t{noItems ? (\r\n\t\t\t\t<h5>No Items</h5>\r\n\t\t\t) : (\r\n\t\t\t\t<>\r\n\t\t\t\t\t{playlist_item.name} by {playlist_item.artist}\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tvariant='danger'\r\n\t\t\t\t\t\t\tonClick={() => handleClick(playlist_item.id, playlist.id)}>\r\n\t\t\t\t\t\t\tRemove\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</>\r\n\t\t\t)}\r\n\t\t</List>\r\n\t)\r\n}\r\n\r\nexport default PlaylistItem\r\n","import React, { useState } from 'react'\r\nimport PlaylistItem from './PlaylistItem'\r\nimport { toast } from 'react-toastify'\r\nimport { Button, Form as BootstrapForm } from 'react-bootstrap'\r\nimport styled from 'styled-components'\r\nimport playlistsApi from '../services/playlists'\r\n\r\nconst Form = styled(BootstrapForm)`\r\n\tdisplay: flex;\r\n\r\n\tbutton {\r\n\t\tmargin-left: 10px;\r\n\t}\r\n`\r\n\r\nconst PlaylistContainer = styled.div`\r\n\tmargin-bottom: 20px;\r\n\tborder-bottom: 1px solid #aaa;\r\n\tpadding: 10px;\r\n\r\n\tbutton {\r\n\t\tmargin-left: 10px;\r\n\t}\r\n`\r\n\r\nconst Playlist = ({\r\n\tplaylists,\r\n\tsetPlaylists,\r\n\tresults,\r\n\tsetResults,\r\n\tonStart,\r\n}) => {\r\n\tconst [playlistName, setPlaylistName] = useState('')\r\n\r\n\tconst handleSubmit = async (event) => {\r\n\t\tevent.preventDefault()\r\n\t\tif (playlistName !== '') {\r\n\t\t\tconst newPlaylist = {\r\n\t\t\t\tname: playlistName,\r\n\t\t\t}\r\n\r\n\t\t\ttry {\r\n\t\t\t\tconst savedPlaylist = await playlistsApi.create(newPlaylist)\r\n\t\t\t\tsetPlaylists(playlists.concat(savedPlaylist.data))\r\n\t\t\t\tsetPlaylistName('')\r\n\t\t\t} catch (exception) {\r\n\t\t\t\tconsole.log(exception.message)\r\n\t\t\t\ttoast.info('Error detected')\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h2>Playlists</h2>\r\n\t\t\t<hr />\r\n\t\t\t{playlists.map((playlist) => (\r\n\t\t\t\t<PlaylistContainer key={playlist.id}>\r\n\t\t\t\t\t<h3>{playlist.name}</h3>\r\n\r\n\t\t\t\t\t{playlist.playlist_items.map((item) => (\r\n\t\t\t\t\t\t<PlaylistItem\r\n\t\t\t\t\t\t\tplaylist={playlist}\r\n\t\t\t\t\t\t\tplaylists={playlists}\r\n\t\t\t\t\t\t\tsetPlaylists={setPlaylists}\r\n\t\t\t\t\t\t\tplaylist_item={item}\r\n\t\t\t\t\t\t\tkey={item.id}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</PlaylistContainer>\r\n\t\t\t))}\r\n\t\t\t<Form onSubmit={handleSubmit}>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\tvalue={playlistName}\r\n\t\t\t\t\t\tonChange={({ target }) => setPlaylistName(target.value)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<Button variant='success' type='submit'>\r\n\t\t\t\t\t\tAdd Playlist\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</div>\r\n\t\t\t</Form>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default Playlist\r\n","import React from 'react'\r\nimport Playlist from './Playlist'\r\nimport styled from 'styled-components'\r\nimport { Col as BootstrapColumn } from 'react-bootstrap'\r\nconst Column = styled(BootstrapColumn)`\r\n\tbackground-color: #fff;\r\n\tpadding: 20px;\r\n\tmin-height: 200px;\r\n\tborder-right: 1px solid #aaa;\r\n`\r\n\r\nconst Side = ({ playlists, setPlaylists, results, setResults, onStart }) => {\r\n\treturn (\r\n\t\t<Column md='4' xs='12'>\r\n\t\t\t<Playlist\r\n\t\t\t\tplaylists={playlists}\r\n\t\t\t\tsetPlaylists={setPlaylists}\r\n\t\t\t\tresults={results}\r\n\t\t\t\tsetResults={setResults}\r\n\t\t\t\tonStart={onStart}\r\n\t\t\t/>\r\n\t\t</Column>\r\n\t)\r\n}\r\n\r\nexport default Side\r\n","import axios from 'axios'\r\n\r\nconst baseUrl = '/api/results'\r\n\r\nconst getAll = () => {\r\n\treturn axios.get(baseUrl)\r\n}\r\n\r\nlet token = null\r\n\r\nconst setToken = (newToken) => {\r\n\ttoken = `bearer ${newToken}`\r\n}\r\n\r\nconst getAllSelected = () => {\r\n\treturn axios.get(`${baseUrl}/user/${token}`)\r\n}\r\n\r\nconst update = (id, updatedObject) => {\r\n\treturn axios.put(`${baseUrl}/${id}`, updatedObject)\r\n}\r\n\r\nconst findResultNotFromPlaylist = (id) => {\r\n\tconst config = {\r\n\t\theaders: {\r\n\t\t\tAuthorization: token,\r\n\t\t},\r\n\t}\r\n\r\n\treturn axios.get(`${baseUrl}/${id}`, config)\r\n}\r\n\r\nconst object = {\r\n\tgetAll,\r\n\tgetAllSelected,\r\n\tupdate,\r\n\tsetToken,\r\n\tfindResultNotFromPlaylist,\r\n}\r\n\r\nexport default object\r\n","import React, { useState } from 'react'\r\nimport {\r\n\tButton,\r\n\tCol,\r\n\tRow,\r\n\tCard as BootstrapCard,\r\n\tModal as BootstrapModal,\r\n} from 'react-bootstrap'\r\nimport playlistsApi from '../services/playlists'\r\nimport resultsApi from '../services/results'\r\nimport styled from 'styled-components'\r\n\r\nconst Modal = styled(BootstrapModal)`\r\n\t.modal-body li {\r\n\t\tdisplay: flex;\r\n\t\tflex-flow: row wrap;\r\n\t\tjustify-content: space-between;\r\n\t\tline-height: 3.2rem;\r\n\t}\r\n`\r\n\r\nconst Card = styled(BootstrapCard)`\r\n\tmargin-bottom: 20px;\r\n\tborder-bottom-left-radius: 10px;\r\n\tborder-bottom-right-radius: 10px;\r\n\r\n\t.card-image {\r\n\t\tborder-radius: 10px;\r\n\t}\r\n`\r\n\r\nconst ButtonColumnContainer = styled(Col)`\r\n\tdisplay: flex;\r\n\tflex-flow: column wrap;\r\n\talign-items: center;\r\n\tmargin: 0;\r\n`\r\n\r\nconst Result = ({\r\n\tresult,\r\n\tresults,\r\n\tsetResults,\r\n\tplaylists,\r\n\tsetPlaylists,\r\n\tuser,\r\n}) => {\r\n\tconst [show, setShow] = useState(false)\r\n\r\n\tconst handleClick = () => {\r\n\t\tsetShow(true)\r\n\t}\r\n\r\n\tconst handleClose = () => {\r\n\t\tsetShow(false)\r\n\t}\r\n\r\n\tconst addToPlaylist = async (playlistId, resultId) => {\r\n\t\tawait playlistsApi.addToPlaylist(playlistId, resultId)\r\n\t\tconst playlistToFind = playlists.find(\r\n\t\t\t(playlist) => playlist.id === playlistId\r\n\t\t)\r\n\r\n\t\tconst playlist_items = playlistToFind.playlist_items.concat(result)\r\n\r\n\t\tsetPlaylists(\r\n\t\t\tplaylists.map((playlist) =>\r\n\t\t\t\tplaylist.id === playlistId\r\n\t\t\t\t\t? { ...playlistToFind, playlist_items: playlist_items }\r\n\t\t\t\t\t: playlist\r\n\t\t\t)\r\n\t\t)\r\n\r\n\t\tconst response = await resultsApi.getAll()\r\n\r\n\t\tsetResults(response.data)\r\n\r\n\t\tsetShow(false)\r\n\t}\r\n\r\n\tconst cardState = result.isAdded ? 'result-added' : 'result-removed'\r\n\r\n\tconst emptyPlaylist = () => <h4>No playlists added</h4>\r\n\r\n\tconst notEmptyPlaylist = () =>\r\n\t\tplaylists.map((playlist) =>\r\n\t\t\tplaylist.playlist_items.find((item) => item.id === result.id) ? (\r\n\t\t\t\t<li key={playlist.id}>{playlist.name} (Added)</li>\r\n\t\t\t) : (\r\n\t\t\t\t<li key={playlist.id}>\r\n\t\t\t\t\t{playlist.name}\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tvariant='success'\r\n\t\t\t\t\t\t\tonClick={() => addToPlaylist(playlist.id, result.id)}>\r\n\t\t\t\t\t\t\tAdd\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</li>\r\n\t\t\t)\r\n\t\t)\r\n\r\n\treturn (\r\n\t\t<Col xs={6} md={6} sm={6} lg={4} xl={3}>\r\n\t\t\t<Modal show={show} size='sm' onHide={handleClose}>\r\n\t\t\t\t<Modal.Header>\r\n\t\t\t\t\t<Modal.Title>Add to Playlists</Modal.Title>\r\n\t\t\t\t\t<span onClick={handleClose}>X</span>\r\n\t\t\t\t</Modal.Header>\r\n\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t{playlists.length > 0 ? notEmptyPlaylist() : emptyPlaylist()}\r\n\t\t\t\t</Modal.Body>\r\n\t\t\t</Modal>\r\n\r\n\t\t\t<Card className={`${cardState}`}>\r\n\t\t\t\t{/* <div className='card-image'>\r\n\t\t\t\t\t<img src='images/playThumbnail.svg' />\r\n\t\t\t\t</div> */}\r\n\t\t\t\t<div className='card-image'>\r\n\t\t\t\t\t<img src={result.imgSource} alt='' />\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<Row className='card-body'>\r\n\t\t\t\t\t<Col xs={12} sm={8} md={12} lg={12}>\r\n\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t<h3>{result.name}</h3>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t<h4>by {result.artist}</h4>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</Col>\r\n\r\n\t\t\t\t\t<ButtonColumnContainer xs='auto' sm='auto' md='auto' lg='auto'>\r\n\t\t\t\t\t\t<Button variant='success' onClick={handleClick}>\r\n\t\t\t\t\t\t\tAdd\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</ButtonColumnContainer>\r\n\t\t\t\t</Row>\r\n\t\t\t</Card>\r\n\t\t</Col>\r\n\t)\r\n}\r\n\r\nexport default Result\r\n","import React, { useState, useEffect } from 'react'\r\nimport Result from './Result'\r\nimport {\r\n\tContainer as BootstrapContainer,\r\n\tRow,\r\n\tForm as BootstrapForm,\r\n} from 'react-bootstrap'\r\nimport styled from 'styled-components'\r\n\r\nconst ResultsContainer = styled(BootstrapContainer)`\r\n\tmargin-top: 10px;\r\n\tpadding-top: 10px;\r\n`\r\n\r\nconst FormControl = styled(BootstrapForm.Control)`\r\n\tborder-radius: 5px;\r\n\tpadding: 10px;\r\n\tfont-size: 1.1rem;\r\n\tborder: 1px solid #999;\r\n`\r\n\r\nconst Results = ({ results, setResults, playlists, setPlaylists, user }) => {\r\n\tconst [searchItem, setSearchItem] = useState('')\r\n\tconst [filteredResults, setFilteredResults] = useState([])\r\n\r\n\tuseEffect(() => {\r\n\t\tconst pattern = new RegExp(searchItem, 'i')\r\n\t\tsetFilteredResults(\r\n\t\t\tresults.filter((result) => {\r\n\t\t\t\tif (pattern.test(result.name) || pattern.test(result.artist)) {\r\n\t\t\t\t\treturn result\r\n\t\t\t\t}\r\n\t\t\t\treturn null\r\n\t\t\t})\r\n\t\t)\r\n\t}, [searchItem, results])\r\n\r\n\tconst handleChange = (event) => {\r\n\t\tsetSearchItem(event.target.value)\r\n\t}\r\n\r\n\tconst handleSubmit = (event) => {\r\n\t\tevent.preventDefault()\r\n\t\t// console.log('Results: ', searchItem)\r\n\t}\r\n\r\n\tconst resultsCounter = filteredResults.length\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h2>Results</h2>\r\n\t\t\t<BootstrapForm id='search' onSubmit={handleSubmit}>\r\n\t\t\t\t<FormControl\r\n\t\t\t\t\ttype='text'\r\n\t\t\t\t\tplaceholder='Search'\r\n\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\tvalue={searchItem}\r\n\t\t\t\t\tautoComplete='off'></FormControl>\r\n\t\t\t</BootstrapForm>\r\n\r\n\t\t\t<ResultsContainer>\r\n\t\t\t\t<Row noGutters={true}>\r\n\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t{resultsCounter > 0 ? resultsCounter : 'No'}{' '}\r\n\t\t\t\t\t\t{resultsCounter > 1 ? `results` : 'result'} found\r\n\t\t\t\t\t</h3>\r\n\t\t\t\t\t{filteredResults.length > 0\r\n\t\t\t\t\t\t? filteredResults.map((result) => {\r\n\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t<Result\r\n\t\t\t\t\t\t\t\t\t\tkey={result.id}\r\n\t\t\t\t\t\t\t\t\t\tsetPlaylists={setPlaylists}\r\n\t\t\t\t\t\t\t\t\t\tplaylists={playlists}\r\n\t\t\t\t\t\t\t\t\t\tresult={result}\r\n\t\t\t\t\t\t\t\t\t\tresults={results}\r\n\t\t\t\t\t\t\t\t\t\tsetResults={setResults}\r\n\t\t\t\t\t\t\t\t\t\tuser={user}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t  })\r\n\t\t\t\t\t\t: ''}\r\n\t\t\t\t</Row>\r\n\t\t\t</ResultsContainer>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default Results\r\n","import axios from 'axios'\r\n\r\nconst baseUrl = '/api/users'\r\n\r\nconst create = async (newObject) => {\r\n\treturn await axios.post(baseUrl, newObject)\r\n}\r\n\r\nconst login = async (credentials) => {\r\n\tconst response = await axios.post(`${baseUrl}/login`, credentials)\r\n\treturn response.data\r\n}\r\n\r\nconst users = {\r\n\tcreate,\r\n\tlogin,\r\n}\r\n\r\nexport default users\r\n","import React, { useState } from 'react'\r\nimport {\r\n\tContainer as BootstrapContainer,\r\n\tButton as BootstrapButton,\r\n\tFormControl,\r\n} from 'react-bootstrap'\r\nimport styled from 'styled-components'\r\nimport usersProvider from '../services/users'\r\n\r\nconst Button = styled(BootstrapButton)`\r\n\tdisplay: flex;\r\n\tflex-flow: row wrap;\r\n\tjustify-content: center;\r\n\twidth: 100%;\r\n\theight: 100%;\r\n\tfont-size: 1.2rem;\r\n\tbackground-color: orange;\r\n\tcolor: #fff;\r\n\r\n\t:hover {\r\n\t\tbackground-color: rgba(200, 130, 50);\r\n\t\tcolor: #fff;\r\n\t}\r\n`\r\n\r\nconst ButtonContainer = styled.div`\r\n\twidth: 100%;\r\n\theight: 45px;\r\n`\r\n\r\nconst Container = styled(BootstrapContainer)`\r\n\tbackground-color: #fff;\r\n\tdisplay: flex;\r\n\tflex-flow: column wrap;\r\n\twidth: 500px;\r\n\tpadding: 20px 60px;\r\n\tborder-radius: 8px;\r\n`\r\n\r\nconst ImageContainer = styled.div`\r\n\tdisplay: flex;\r\n\tflex-flow: row wrap;\r\n\tjustify-content: center;\r\n\r\n\timg {\r\n\t\twidth: 60px;\r\n\t}\r\n`\r\n\r\nconst Form = styled.form`\r\n\tpadding: 10px;\r\n\tmargin: 10px;\r\n\tdisplay: flex;\r\n\tflex-flow: column wrap;\r\n\talign-items: center;\r\n`\r\n\r\nconst InputContainer = styled.div`\r\n\tdisplay: flex;\r\n\tmargin-bottom: 10px;\r\n\tflex-flow: row wrap;\r\n\tjustify-content: space-between;\r\n\twidth: 100%;\r\n\tlabel {\r\n\t\tfont-size: 0.9rem;\r\n\t\tmargin-bottom: 3px;\r\n\t}\r\n`\r\nconst Input = styled(FormControl)`\r\n\tborder-radius: 5px;\r\n`\r\n\r\nconst LinkContainer = styled.div`\r\n\tmargin-top: 10px;\r\n\tfont-size: 1rem;\r\n\r\n\tbutton {\r\n\t\tbackground-color: #fff;\r\n\t\tborder: none;\r\n\t\tcolor: #3cae67f9;\r\n\t\tbox-shadow: 0;\r\n\t}\r\n`\r\n\r\nconst RegisterForm = ({ isRegistered, setIsRegistered }) => {\r\n\tconst [username, setUsername] = useState('')\r\n\tconst [name, setName] = useState('')\r\n\tconst [password, setPassword] = useState('')\r\n\r\n\tconst handleClick = (event) => {\r\n\t\tevent.preventDefault()\r\n\t\tsetIsRegistered(!isRegistered)\r\n\t}\r\n\tconst handleSubmit = async (event) => {\r\n\t\tevent.preventDefault()\r\n\r\n\t\tconst newUser = {\r\n\t\t\tusername: username,\r\n\t\t\tname: name,\r\n\t\t\tpassword: password,\r\n\t\t}\r\n\r\n\t\tconst responseData = await usersProvider.create(newUser)\r\n\t\tif (responseData.status === 200) {\r\n\t\t\tconsole.log(responseData)\r\n\t\t\tsetIsRegistered(!isRegistered)\r\n\t\t\tsetName('')\r\n\t\t\tsetUsername('')\r\n\t\t\tsetPassword('')\r\n\t\t}\r\n\t}\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<ImageContainer>\r\n\t\t\t\t<img src='images/logo2.svg' alt='' />\r\n\t\t\t</ImageContainer>\r\n\t\t\t<Form onSubmit={handleSubmit}>\r\n\t\t\t\t<InputContainer>\r\n\t\t\t\t\t<label htmlFor='username'>Username</label>\r\n\t\t\t\t\t<Input\r\n\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\tname='username'\r\n\t\t\t\t\t\tonChange={({ target }) => setUsername(target.value)}\r\n\t\t\t\t\t\tvalue={username}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</InputContainer>\r\n\r\n\t\t\t\t<InputContainer>\r\n\t\t\t\t\t<label htmlFor='name'>Name</label>\r\n\t\t\t\t\t<Input\r\n\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\tonChange={({ target }) => setName(target.value)}\r\n\t\t\t\t\t\tvalue={name}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</InputContainer>\r\n\r\n\t\t\t\t<InputContainer>\r\n\t\t\t\t\t<label htmlFor='password'>Password</label>\r\n\t\t\t\t\t<Input\r\n\t\t\t\t\t\ttype='password'\r\n\t\t\t\t\t\tname='password'\r\n\t\t\t\t\t\tonChange={({ target }) => setPassword(target.value)}\r\n\t\t\t\t\t\tvalue={password}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</InputContainer>\r\n\r\n\t\t\t\t<ButtonContainer>\r\n\t\t\t\t\t<Button variant='' type='submit'>\r\n\t\t\t\t\t\tSign Up\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</ButtonContainer>\r\n\r\n\t\t\t\t<LinkContainer>\r\n\t\t\t\t\t<button onClick={handleClick}>\r\n\t\t\t\t\t\tAlready have an account: Sign In\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</LinkContainer>\r\n\t\t\t</Form>\r\n\t\t</Container>\r\n\t)\r\n}\r\n\r\nexport default RegisterForm\r\n","import React from 'react'\r\nimport {\r\n\tContainer as BootstrapContainer,\r\n\tButton as BootstrapButton,\r\n\tFormControl,\r\n} from 'react-bootstrap'\r\nimport { ToastContainer } from 'react-toastify'\r\nimport styled from 'styled-components'\r\n\r\nconst Button = styled(BootstrapButton)`\r\n\tdisplay: flex;\r\n\tflex-flow: row wrap;\r\n\tjustify-content: center;\r\n\twidth: 100%;\r\n\theight: 100%;\r\n\tfont-size: 1.2rem;\r\n`\r\n\r\nconst ButtonContainer = styled.div`\r\n\twidth: 100%;\r\n\theight: 45px;\r\n`\r\n\r\nconst Container = styled(BootstrapContainer)`\r\n\tbackground-color: #fff;\r\n\tdisplay: flex;\r\n\tflex-flow: column wrap;\r\n\twidth: 500px;\r\n\tpadding: 20px 60px;\r\n\tborder-radius: 8px;\r\n`\r\n\r\nconst ImageContainer = styled.div`\r\n\tdisplay: flex;\r\n\tflex-flow: row wrap;\r\n\tjustify-content: center;\r\n\r\n\timg {\r\n\t\twidth: 60px;\r\n\t}\r\n`\r\n\r\nconst Form = styled.form`\r\n\tpadding: 10px;\r\n\tmargin: 10px;\r\n\tdisplay: flex;\r\n\tflex-flow: column wrap;\r\n\talign-items: center;\r\n`\r\n\r\nconst InputContainer = styled.div`\r\n\tdisplay: flex;\r\n\tmargin-bottom: 10px;\r\n\tflex-flow: row wrap;\r\n\tjustify-content: space-between;\r\n\twidth: 100%;\r\n\tlabel {\r\n\t\tfont-size: 0.9rem;\r\n\t\tmargin-bottom: 3px;\r\n\t}\r\n`\r\nconst Input = styled(FormControl)`\r\n\tborder-radius: 5px;\r\n`\r\n\r\nconst LinkContainer = styled.div`\r\n\tmargin-top: 10px;\r\n\tfont-size: 1rem;\r\n\r\n\tbutton {\r\n\t\tbackground-color: #fff;\r\n\t\tborder: none;\r\n\t\tcolor: orange;\r\n\t\tbox-shadow: 0;\r\n\t}\r\n`\r\n\r\nconst LoginForm = ({\r\n\tisRegistered,\r\n\tsetIsRegistered,\r\n\tisLoggedIn,\r\n\tsetIsLoggedIn,\r\n\tsetUser,\r\n\tusername,\r\n\tsetUsername,\r\n\tpassword,\r\n\tsetPassword,\r\n\thandleSubmit,\r\n}) => {\r\n\tconst handleClick = (event) => {\r\n\t\tevent.preventDefault()\r\n\t\tsetIsRegistered(!isRegistered)\r\n\t\tsetUsername('')\r\n\t\tsetPassword('')\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<ToastContainer newestOnTop={true} autoClose={3000} />\r\n\t\t\t<ImageContainer>\r\n\t\t\t\t<img src='images/logo2.svg' alt='' />\r\n\t\t\t</ImageContainer>\r\n\t\t\t<Form onSubmit={handleSubmit}>\r\n\t\t\t\t<InputContainer>\r\n\t\t\t\t\t<label htmlFor='username'>Username</label>\r\n\t\t\t\t\t<Input\r\n\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\tname='username'\r\n\t\t\t\t\t\tonChange={({ target }) => setUsername(target.value)}\r\n\t\t\t\t\t\tvalue={username}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</InputContainer>\r\n\r\n\t\t\t\t<InputContainer>\r\n\t\t\t\t\t<label htmlFor='password'>Password</label>\r\n\t\t\t\t\t<Input\r\n\t\t\t\t\t\ttype='password'\r\n\t\t\t\t\t\tname='password'\r\n\t\t\t\t\t\tonChange={({ target }) => setPassword(target.value)}\r\n\t\t\t\t\t\tvalue={password}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</InputContainer>\r\n\r\n\t\t\t\t<ButtonContainer>\r\n\t\t\t\t\t<Button variant='success' type='submit'>\r\n\t\t\t\t\t\tLogin\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</ButtonContainer>\r\n\r\n\t\t\t\t<LinkContainer>\r\n\t\t\t\t\t<button onClick={handleClick}>Don't have an account: Sign Up</button>\r\n\t\t\t\t</LinkContainer>\r\n\t\t\t</Form>\r\n\t\t</Container>\r\n\t)\r\n}\r\n\r\nexport default LoginForm\r\n","import Nav from './components/Nav'\r\nimport Side from './components/Side'\r\nimport Results from './components/Results'\r\nimport RegisterForm from './components/RegisterForm'\r\nimport LoginForm from './components/LoginForm'\r\nimport React, { useState, useEffect } from 'react'\r\nimport { Container as BootstrapContainer, Row, Col } from 'react-bootstrap'\r\nimport resultsApi from './services/results'\r\nimport playlistsApi from './services/playlists'\r\nimport usersApi from './services/users'\r\nimport styled from 'styled-components'\r\nimport { toast, ToastContainer } from 'react-toastify'\r\n\r\nconst Container = styled(BootstrapContainer)``\r\n\r\nconst AppContainer = styled.div`\r\n\tdisplay: flex;\r\n\tflex-flow: column wrap;\r\n\r\n\tpadding-top: ${(props) => (props.isLoggedIn ? '0px' : '200px')};\r\n`\r\nconst ResultsColumn = styled(Col)`\r\n\tmargin-left: 0;\r\n\tbackground-color: #fff;\r\n\tpadding: 20px;\r\n\t@media (max-width: 768px) {\r\n\t\tmargin-top: 10px;\r\n\t}\r\n`\r\n\r\nconst App = () => {\r\n\tconst [playlists, setPlaylists] = useState([])\r\n\tconst [results, setResults] = useState([])\r\n\tconst [isLoggedIn, setIsLoggedIn] = useState(false)\r\n\tconst [isRegistered, setIsRegistered] = useState(true)\r\n\tconst [user, setUser] = useState('')\r\n\tconst [username, setUsername] = useState('')\r\n\tconst [password, setPassword] = useState('')\r\n\r\n\tuseEffect(() => {\r\n\t\tconst loggedUserJSON = window.localStorage.getItem('loggedInUser')\r\n\r\n\t\tif (loggedUserJSON) {\r\n\t\t\tconst user = JSON.parse(loggedUserJSON)\r\n\t\t\tsetIsLoggedIn(true)\r\n\t\t\tsetUser(user)\r\n\t\t\tresultsApi.setToken(user.token)\r\n\t\t\tplaylistsApi.setToken(user.token)\r\n\t\t} else {\r\n\t\t\tsetIsLoggedIn(false)\r\n\t\t}\r\n\r\n\t\tif (isLoggedIn) {\r\n\t\t\tresultsApi.getAll().then((response) => {\r\n\t\t\t\tsetResults(response.data)\r\n\t\t\t})\r\n\t\t\tplaylistsApi.getAllPlaylists().then((response) => {\r\n\t\t\t\tsetPlaylists(response.data)\r\n\t\t\t})\r\n\t\t} else {\r\n\t\t\tsetPlaylists([])\r\n\t\t}\r\n\t}, [isLoggedIn])\r\n\r\n\tconst mainContainer = (\r\n\t\t<Container fluid='xl' className='main-container'>\r\n\t\t\t<ToastContainer></ToastContainer>\r\n\r\n\t\t\t<Row className='row-2'>\r\n\t\t\t\t<Nav\r\n\t\t\t\t\tisLoggedIn={isLoggedIn}\r\n\t\t\t\t\tsetIsLoggedIn={setIsLoggedIn}\r\n\t\t\t\t\tuser={user}\r\n\t\t\t\t\tsetUser={setUser}\r\n\t\t\t\t/>\r\n\t\t\t</Row>\r\n\r\n\t\t\t<Row xs={12} noGutters={true}>\r\n\t\t\t\t<Side\r\n\t\t\t\t\tplaylists={playlists}\r\n\t\t\t\t\tsetPlaylists={setPlaylists}\r\n\t\t\t\t\tresults={results}\r\n\t\t\t\t\tsetResults={setResults}\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t<ResultsColumn md={8}>\r\n\t\t\t\t\t<Results\r\n\t\t\t\t\t\tplaylists={playlists}\r\n\t\t\t\t\t\tsetPlaylists={setPlaylists}\r\n\t\t\t\t\t\tresults={results}\r\n\t\t\t\t\t\tsetResults={setResults}\r\n\t\t\t\t\t\tuser={user}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</ResultsColumn>\r\n\t\t\t</Row>\r\n\t\t</Container>\r\n\t)\r\n\r\n\tconst handleSubmit = async (event) => {\r\n\t\tevent.preventDefault()\r\n\r\n\t\tconst userCredentials = {\r\n\t\t\tusername: username,\r\n\t\t\tpassword: password,\r\n\t\t}\r\n\t\ttry {\r\n\t\t\tconst user = await usersApi.login(userCredentials)\r\n\t\t\tsetIsLoggedIn(!isLoggedIn)\r\n\t\t\twindow.localStorage.setItem('loggedInUser', JSON.stringify(user))\r\n\t\t\tresultsApi.setToken(user.token)\r\n\t\t\tsetUsername('')\r\n\t\t\tsetPassword('')\r\n\t\t\tsetUser(user)\r\n\t\t} catch (exception) {\r\n\t\t\ttoast.error('Wrong Credentials')\r\n\t\t\tconsole.log(exception.message)\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<AppContainer isLoggedIn={isLoggedIn}>\r\n\t\t\t{isLoggedIn ? (\r\n\t\t\t\tmainContainer\r\n\t\t\t) : !isRegistered ? (\r\n\t\t\t\t<RegisterForm\r\n\t\t\t\t\tisRegistered={isRegistered}\r\n\t\t\t\t\tsetIsRegistered={setIsRegistered}\r\n\t\t\t\t/>\r\n\t\t\t) : (\r\n\t\t\t\t<LoginForm\r\n\t\t\t\t\tsetUser={setUser}\r\n\t\t\t\t\tisRegistered={isRegistered}\r\n\t\t\t\t\tsetIsRegistered={setIsRegistered}\r\n\t\t\t\t\tisLoggedIn={isLoggedIn}\r\n\t\t\t\t\tsetIsLoggedIn={setIsLoggedIn}\r\n\t\t\t\t\tusername={username}\r\n\t\t\t\t\tsetUsername={setUsername}\r\n\t\t\t\t\tpassword={password}\r\n\t\t\t\t\tsetPassword={setPassword}\r\n\t\t\t\t\thandleSubmit={handleSubmit}\r\n\t\t\t\t/>\r\n\t\t\t)}\r\n\t\t</AppContainer>\r\n\t)\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport './index.css'\r\nimport App from './App'\r\nimport 'react-toastify/dist/ReactToastify.css'\r\n// const currentPlaylist = []\r\n\r\n// const results = [\r\n// \t{\r\n// \t\tid: 'song-' + nanoid(),\r\n// \t\tname: 'Gallows Bell',\r\n// \t\tartist: 'Vocaloid',\r\n// \t\tisAdded: false,\r\n// \t\timgSource: 'images/icon.svg',\r\n// \t\tcolor: '#683025ff',\r\n// \t\tlightFont: true\r\n// \t},\r\n// \t{\r\n// \t\tid: 'song-' + nanoid(),\r\n// \t\tname: 'Glow',\r\n// \t\tartist: 'Vocaloid',\r\n// \t\tisAdded: false,\r\n// \t\timgSource: 'images/icon2.svg',\r\n// \t\tcolor: '#855ec6ff',\r\n// \t\tlightFont: true\r\n// \t},\r\n// \t{\r\n// \t\tid: 'song-' + nanoid(),\r\n// \t\tname: 'Hysteria',\r\n// \t\tartist: 'Vocaloid',\r\n// \t\tisAdded: false,\r\n// \t\timgSource: 'images/icon3.svg',\r\n// \t\tcolor: '#5ec3c6ff',\r\n// \t\tlightFont: true,\r\n// \t},\r\n// \t{\r\n// \t\tid: 'song-' + nanoid(),\r\n// \t\tname: 'Mirai e',\r\n// \t\tartist: 'Unknown',\r\n// \t\tisAdded: false,\r\n// \t\timgSource: 'images/icon4.svg',\r\n// \t\tcolor: '#b67855ff',\r\n// \t\tlightFont: true,\r\n// \t},\r\n// \t{\r\n// \t\tid: 'song-' + nanoid(),\r\n// \t\tname: 'Crossroads',\r\n// \t\tartist: 'Vocaloid',\r\n// \t\tisAdded: false,\r\n// \t\timgSource: 'images/icon5.svg',\r\n// \t\tcolor: '#b65599ff',\r\n// \t\tlightFont: false\r\n// \t},\r\n// \t{\r\n// \t\tid: 'song-' + nanoid(),\r\n// \t\tname: 'Now or Never',\r\n// \t\tartist: 'Vocaloid',\r\n// \t\tisAdded: false,\r\n// \t\timgSource: 'images/icon6.svg',\r\n// \t\tcolor: '#5ca7a9ff',\r\n// \t\tlightFont: false\r\n// \t},\r\n// \t{\r\n// \t\tid: 'song-' + nanoid(),\r\n// \t\tname: 'Magenta',\r\n// \t\tartist: 'Vocaloid',\r\n// \t\tisAdded: false,\r\n// \t\timgSource: 'images/icon7.svg',\r\n// \t\tcolor: '#7a7a7aff',\r\n// \t\tlightFont: false\r\n// \t},\r\n// ]\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))\r\n"],"sourceRoot":""}