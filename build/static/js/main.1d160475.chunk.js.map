{"version":3,"sources":["services/results.js","services/playlists.js","components/Nav.js","components/PlaylistItem.js","components/Playlist.js","components/Side.js","components/Result.js","components/Results.js","services/users.js","components/RegisterForm.js","components/LoginForm.js","App.js","index.js"],"names":["baseUrl","token","object","getAll","axios","get","getAllSelected","update","id","updatedObject","put","setToken","newToken","findResultNotFromPlaylist","config","headers","Authorization","getAllPlaylists","a","request","create","newPlaylistItem","post","deleteItemFromPlaylist","item_id","playlist_id","request_body","addToPlaylist","result_id","updated","removePlaylist","delete","Container","styled","div","Logo","User","Nav","isLoggedIn","setIsLoggedIn","user","setUser","src","alt","className","name","Button","variant","onClick","window","localStorage","clear","resultsApi","playlistsApi","List","li","PlaylistItem","playlists","setPlaylists","playlist","playlist_item","useState","noItems","setNoItems","useEffect","length","handleClick","playlistApi","savedPlaylists","status","toast","data","artist","Form","BootstrapForm","PlaylistContainer","Playlist","results","setResults","onStart","playlistName","setPlaylistName","handleSubmit","event","preventDefault","newPlaylist","savedPlaylist","concat","console","log","message","info","deletePlaylist","map","playlist_items","item","onSubmit","Control","type","value","onChange","target","Column","BootstrapColumn","Side","md","xs","Modal","BootstrapModal","Card","BootstrapCard","ButtonColumnContainer","Col","Result","result","show","setShow","handleClose","playlistId","resultId","playlistToFind","find","response","cardState","isAdded","sm","lg","xl","size","onHide","Header","Title","Body","imgSource","Row","ResultsContainer","BootstrapContainer","FormControl","Results","searchItem","setSearchItem","filteredResults","setFilteredResults","pattern","RegExp","filter","test","resultsCounter","placeholder","autoComplete","noGutters","users","newObject","login","credentials","BootstrapButton","ButtonContainer","ImageContainer","form","InputContainer","Input","LinkContainer","RegisterForm","isRegistered","setIsRegistered","username","setUsername","setName","password","setPassword","createNewUser","newUser","usersProvider","htmlFor","LoginForm","userCredentials","usersApi","setItem","JSON","stringify","error","newestOnTop","autoClose","AppContainer","props","ResultsColumn","App","loggedUserJSON","getItem","parse","then","mainContainer","fluid","ReactDOM","render","document","getElementById"],"mappings":"wSAEMA,EAAU,eAMZC,EAAQ,KAgCGC,EARA,CACdC,OA7Bc,WACd,OAAOC,IAAMC,IAAIL,IA6BjBM,eApBsB,WACtB,OAAOF,IAAMC,IAAN,UAAaL,EAAb,iBAA6BC,KAoBpCM,OAjBc,SAACC,EAAIC,GACnB,OAAOL,IAAMM,IAAN,UAAaV,EAAb,YAAwBQ,GAAMC,IAiBrCE,SA1BgB,SAACC,GACjBX,EAAK,iBAAaW,IA0BlBC,0BAfiC,SAACL,GAClC,IAAMM,EAAS,CACdC,QAAS,CACRC,cAAef,IAIjB,OAAOG,IAAMC,IAAN,UAAaL,EAAb,YAAwBQ,GAAMM,K,wBC3BhCd,EAAU,gBAEZC,EAAQ,KAqDGC,EATA,CACde,gBAvCoB,uCAAG,8BAAAC,EAAA,6DACjBJ,EAAS,CACdC,QAAS,CAAEC,cAAef,IAFJ,SAIDG,IAAMC,IAAIL,EAASc,GAJlB,cAIjBK,EAJiB,yBAMhBA,GANgB,2CAAH,qDAwCpBC,OA/BW,uCAAG,WAAOC,GAAP,eAAAH,EAAA,6DACRJ,EAAS,CACdC,QAAS,CAAEC,cAAef,IAFb,SAKDG,IAAMkB,KAAKtB,EAASqB,EAAiBP,GALpC,mFAAH,sDAgCXS,uBAxB2B,uCAAG,WAAOC,EAASC,GAAhB,eAAAP,EAAA,6DACxBQ,EAAe,CACpBD,eAF6B,SAKjBrB,IAAMM,IAAN,UAAaV,EAAb,YAAwBwB,GAAWE,GALlB,mFAAH,wDAyB3Bf,SA9CgB,SAACC,GACjBX,EAAK,iBAAaW,IA8ClBe,cAlBkB,uCAAG,WAAOF,EAAaG,GAApB,eAAAV,EAAA,6DACfW,EAAU,CACfJ,cACAG,aAHoB,SAMRxB,IAAMM,IAAN,UAAaV,EAAb,mBAA+B4B,GAAaC,GANpC,mFAAH,wDAmBlBC,eAVmB,uCAAG,WAAOL,GAAP,SAAAP,EAAA,sEACTd,IAAM2B,OAAN,UAAgB/B,EAAhB,YAA2ByB,IADlB,mFAAH,uD,OCtCdO,GAAYC,IAAOC,IAAV,+NAUTC,GAAOF,IAAOC,IAAV,kLAYJE,GAAOH,IAAOC,IAAV,gTA8CKG,GA3BH,SAAC,GAAkD,IAAhDC,EAA+C,EAA/CA,WAAYC,EAAmC,EAAnCA,cAAeC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QAS/C,OACC,eAACT,GAAD,WACC,cAACG,GAAD,UACC,qBAAKO,IAAI,mBAAmBC,IAAI,GAAGnC,GAAG,WAGvC,eAAC4B,GAAD,WACC,0CACS,sBAAMQ,UAAU,WAAhB,SAA4BJ,EAAKK,UAE1C,cAACC,EAAA,EAAD,CAAQC,QAAQ,UAAUC,QAAS,kBAjBrCT,GAAeD,GACfG,EAAQ,MACRQ,OAAOC,aAAaC,QACpBC,EAAWzC,SAAS,WACpB0C,EAAa1C,SAAS,OAapB,oBAGA,qBAAK+B,IAAI,kBAAkBC,IAAI,Y,SC/D7BW,GAAOrB,IAAOsB,GAAV,gQAqDKC,GAxCM,SAAC,GAAyD,EAAvDC,UAAwD,IAA7CC,EAA4C,EAA5CA,aAAcC,EAA8B,EAA9BA,SAAUC,EAAoB,EAApBA,cAC1D,EAA8BC,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KAEAC,qBAAU,WACoB,IAAzBJ,EAAcK,QACjBF,GAAW,KAEV,CAACH,EAAcK,SAElB,IAAMC,EAAW,uCAAG,WAAO1C,EAASC,GAAhB,eAAAP,EAAA,sEACbiD,EAAY5C,uBAAuBC,EAASC,GAD/B,uBAGU0C,EAAYlD,kBAHtB,OAIW,OADxBmD,EAHa,QAIAC,OAClBC,aAAM,2BAENZ,EAAaU,EAAeG,MAPV,2CAAH,wDAWjB,OACC,cAACjB,GAAD,UACEQ,EACA,0CAEA,qCACEF,EAAcf,KADhB,OAC0Be,EAAcY,OACvC,8BACC,cAAC1B,EAAA,EAAD,CACCC,QAAQ,SACRC,QAAS,kBAAMkB,EAAYN,EAAcpD,GAAImD,EAASnD,KAFvD,4B,SCxCAiE,GAAOxC,YAAOyC,KAAPzC,CAAH,yFAQJ0C,GAAoB1C,IAAOC,IAAV,mJAUjBF,GAAYC,IAAOC,IAAV,8FAsFA0C,GAhFE,SAAC,GAMX,IALNnB,EAKK,EALLA,UACAC,EAIK,EAJLA,aAKA,GADK,EAHLmB,QAGK,EAFLC,WAEK,EADLC,QAEwClB,mBAAS,KAAjD,mBAAOmB,EAAP,KAAqBC,EAArB,KAEMC,EAAY,uCAAG,WAAOC,GAAP,iBAAAjE,EAAA,yDACpBiE,EAAMC,iBACe,KAAjBJ,EAFgB,wBAGbK,EAAc,CACnBxC,KAAMmC,GAJY,kBAQU3B,EAAajC,OAAOiE,GAR9B,OAQZC,EARY,OASlB5B,EAAaD,EAAU8B,OAAOD,EAAcf,OAC5CU,EAAgB,IAVE,kDAYlBO,QAAQC,IAAI,KAAUC,SACtBpB,KAAMqB,KAAK,2BAbO,0DAAH,sDAkBZC,EAAc,uCAAG,WAAOpF,GAAP,eAAAU,EAAA,sEAChBmC,EAAavB,eAAetB,GADZ,uBAGO6C,EAAapC,kBAHpB,OAGhBmD,EAHgB,OAItBV,EAAaU,EAAeG,MAJN,2CAAH,sDAOpB,OACC,qCACC,2CACA,uBACCd,EAAUoC,KAAI,SAAClC,GAAD,OACd,eAACgB,GAAD,WACC,eAAC,GAAD,WACC,6BAAKhB,EAASd,OACd,8BACC,cAACC,EAAA,EAAD,CACCC,QAAQ,SACRC,QAAS,kBAAM4C,EAAejC,EAASnD,KAFxC,yBAQDmD,EAASmC,eAAeD,KAAI,SAACE,GAAD,OAC5B,cAAC,GAAD,CACCpC,SAAUA,EACVF,UAAWA,EACXC,aAAcA,EACdE,cAAemC,GACVA,EAAKvF,SAlBWmD,EAASnD,OAuBlC,eAAC,GAAD,CAAMwF,SAAUd,EAAhB,UACC,8BACC,cAAC,GAAKe,QAAN,CACCC,KAAK,OACLC,MAAOnB,EACPoB,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBpB,EAAgBoB,EAAOF,YAGnD,8BACC,cAACrD,EAAA,EAAD,CAAQC,QAAQ,UAAUmD,KAAK,SAA/B,mC,SClGCI,GAASrE,YAAOsE,KAAPtE,CAAH,gIAqBGuE,GAdF,SAAC,GAA+D,IAA7D/C,EAA4D,EAA5DA,UAAWC,EAAiD,EAAjDA,aAAcmB,EAAmC,EAAnCA,QAASC,EAA0B,EAA1BA,WAAYC,EAAc,EAAdA,QAC7D,OACC,cAACuB,GAAD,CAAQG,GAAG,IAAIC,GAAG,KAAlB,SACC,cAAC,GAAD,CACCjD,UAAWA,EACXC,aAAcA,EACdmB,QAASA,EACTC,WAAYA,EACZC,QAASA,O,oCCPP4B,GAAQ1E,YAAO2E,KAAP3E,CAAH,kKASL4E,GAAO5E,YAAO6E,KAAP7E,CAAH,+KAUJ8E,GAAwB9E,YAAO+E,KAAP/E,CAAH,+GAiHZgF,GA1GA,SAAC,GAOT,IANNC,EAMK,EANLA,OAEApC,GAIK,EALLD,QAKK,EAJLC,YACArB,EAGK,EAHLA,UACAC,EAEK,EAFLA,aAGA,GADK,EADLlB,KAEwBqB,oBAAS,IAAjC,mBAAOsD,EAAP,KAAaC,EAAb,KAMMC,EAAc,WACnBD,GAAQ,IAGHzF,EAAa,uCAAG,WAAO2F,EAAYC,GAAnB,mBAAArG,EAAA,sEACfmC,EAAa1B,cAAc2F,EAAYC,GADxB,cAEfC,EAAiB/D,EAAUgE,MAChC,SAAC9D,GAAD,OAAcA,EAASnD,KAAO8G,KAGzBxB,EAAiB0B,EAAe1B,eAAeP,OAAO2B,GAE5DxD,EACCD,EAAUoC,KAAI,SAAClC,GAAD,OACbA,EAASnD,KAAO8G,EAAhB,6BACQE,GADR,IACwB1B,eAAgBA,IACrCnC,MAZgB,SAgBEP,EAAWjD,SAhBb,OAgBfuH,EAhBe,OAkBrB5C,EAAW4C,EAASnD,MAEpB6C,GAAQ,GApBa,4CAAH,wDAuBbO,EAAYT,EAAOU,QAAU,eAAiB,iBAsBpD,OACC,eAACZ,GAAA,EAAD,CAAKN,GAAI,EAAGD,GAAI,EAAGoB,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAArC,UACC,eAAC,GAAD,CAAOZ,KAAMA,EAAMa,KAAK,KAAKC,OAAQZ,EAArC,UACC,eAAC,GAAMa,OAAP,WACC,cAAC,GAAMC,MAAP,+BACA,cAACrF,EAAA,EAAD,CAAQC,QAAQ,SAASC,QAASqE,EAAlC,kBAID,cAAC,GAAMe,KAAP,UACE3E,EAAUQ,OAAS,EA3BvBR,EAAUoC,KAAI,SAAClC,GAAD,OACbA,EAASmC,eAAe2B,MAAK,SAAC1B,GAAD,OAAUA,EAAKvF,KAAO0G,EAAO1G,MACzD,+BAAuBmD,EAASd,KAAhC,aAASc,EAASnD,IAElB,+BACEmD,EAASd,KACV,8BACC,cAACC,EAAA,EAAD,CACCC,QAAQ,UACRC,QAAS,kBAAMrB,EAAcgC,EAASnD,GAAI0G,EAAO1G,KAFlD,qBAHOmD,EAASnD,OAPO,yDAkC1B,eAAC,GAAD,CAAMoC,UAAS,UAAK+E,GAApB,UAIC,qBAAK/E,UAAU,aAAf,SACC,qBAAKF,IAAKwE,EAAOmB,UAAW1F,IAAI,OAGjC,eAAC2F,GAAA,EAAD,CAAK1F,UAAU,YAAf,UACC,eAACoE,GAAA,EAAD,CAAKN,GAAI,GAAImB,GAAI,EAAGpB,GAAI,GAAIqB,GAAI,GAAhC,UACC,cAACd,GAAA,EAAD,UACC,6BAAKE,EAAOrE,SAEb,cAACmE,GAAA,EAAD,UACC,qCAAQE,EAAO1C,eAIjB,cAACuC,GAAD,CAAuBL,GAAG,OAAOmB,GAAG,OAAOpB,GAAG,OAAOqB,GAAG,OAAxD,SACC,cAAChF,EAAA,EAAD,CAAQC,QAAQ,UAAUC,QAtFX,WACnBoE,GAAQ,IAqFJ,6B,SC7HAmB,GAAmBtG,YAAOuG,KAAPvG,CAAH,uEAKhBwG,GAAcxG,YAAOyC,KAAcuB,QAArBhE,CAAH,sHAwEFyG,GAjEC,SAAC,GAA4D,IAA1D7D,EAAyD,EAAzDA,QAASC,EAAgD,EAAhDA,WAAYrB,EAAoC,EAApCA,UAAWC,EAAyB,EAAzBA,aAAclB,EAAW,EAAXA,KAChE,EAAoCqB,mBAAS,IAA7C,mBAAO8E,EAAP,KAAmBC,EAAnB,KACA,EAA8C/E,mBAAS,IAAvD,mBAAOgF,EAAP,KAAwBC,EAAxB,KAEA9E,qBAAU,WACT,IAAM+E,EAAU,IAAIC,OAAOL,EAAY,KACvCG,EACCjE,EAAQoE,QAAO,SAAC/B,GACf,OAAI6B,EAAQG,KAAKhC,EAAOrE,OAASkG,EAAQG,KAAKhC,EAAO1C,QAC7C0C,EAED,WAGP,CAACyB,EAAY9D,IAEhB,IASMsE,EAAiBN,EAAgB5E,OACvC,OACC,qCACC,yCACA,cAAC,KAAD,CAAezD,GAAG,SAASwF,SATR,SAACb,GACrBA,EAAMC,kBAQL,SACC,cAACqD,GAAD,CACCvC,KAAK,OACLkD,YAAY,SACZhD,SAjBiB,SAACjB,GACrByD,EAAczD,EAAMkB,OAAOF,QAiBxBA,MAAOwC,EACPU,aAAa,UAGf,cAACd,GAAD,UACC,eAACD,GAAA,EAAD,CAAKgB,WAAW,EAAhB,UACC,+BACEH,EAAiB,EAAIA,EAAiB,KAAM,IAC5CA,EAAiB,EAAjB,UAAiC,SAFnC,YAICN,EAAgB5E,OAAS,EACvB4E,EAAgBhD,KAAI,SAACqB,GACrB,OACC,cAAC,GAAD,CAECxD,aAAcA,EACdD,UAAWA,EACXyD,OAAQA,EACRrC,QAASA,EACTC,WAAYA,EACZtC,KAAMA,GAND0E,EAAO1G,OAUd,Y,SC7EFR,GAAU,aAgBDuJ,GALD,CACbnI,OAVW,uCAAG,WAAOoI,GAAP,SAAAtI,EAAA,sEACDd,IAAMkB,KAAKtB,GAASwJ,GADnB,mFAAH,sDAWXC,MAPU,uCAAG,WAAOC,GAAP,eAAAxI,EAAA,sEACUd,IAAMkB,KAAN,UAActB,GAAd,UAA+B0J,GADzC,cACPhC,EADO,yBAENA,EAASnD,MAFH,2CAAH,uDCCLzB,GAASb,YAAO0H,IAAP1H,CAAH,sRAgBN2H,GAAkB3H,IAAOC,IAAV,6DAKfF,GAAYC,YAAOuG,KAAPvG,CAAH,mKAST4H,GAAiB5H,IAAOC,IAAV,oIAUduC,GAAOxC,IAAO6H,KAAV,oIAQJC,GAAiB9H,IAAOC,IAAV,kNAWd8H,GAAQ/H,YAAOwG,KAAPxG,CAAH,mDAILgI,GAAgBhI,IAAOC,IAAV,mLA+FJgI,GAnFM,SAAC,GAAuC,IAArCC,EAAoC,EAApCA,aAAcC,EAAsB,EAAtBA,gBACrC,EAAgCvG,mBAAS,IAAzC,mBAAOwG,EAAP,KAAiBC,EAAjB,KACA,EAAwBzG,mBAAS,IAAjC,mBAAOhB,EAAP,KAAa0H,EAAb,KACA,EAAgC1G,mBAAS,IAAzC,mBAAO2G,EAAP,KAAiBC,EAAjB,KAOMC,EAAa,uCAAG,WAAOC,GAAP,SAAAzJ,EAAA,sEACf0J,GAAcxJ,OAAOuJ,GADN,2CAAH,sDAqBnB,OACC,eAAC,GAAD,WACC,cAACd,GAAD,UACC,qBAAKnH,IAAI,mBAAmBC,IAAI,OAEjC,eAAC,GAAD,CAAMqD,SAtBa,SAACb,GACrBA,EAAMC,iBAQNsF,EANgB,CACfL,SAAUA,EACVxH,KAAMA,EACN2H,SAAUA,IAKXJ,GAAiBD,GACjBI,EAAQ,IACRD,EAAY,IACZG,EAAY,KAQX,UACC,eAACV,GAAD,WACC,uBAAOc,QAAQ,WAAf,sBACA,cAACb,GAAD,CACC9D,KAAK,OACLrD,KAAK,WACLuD,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBiE,EAAYjE,EAAOF,QAC7CA,MAAOkE,OAIT,eAACN,GAAD,WACC,uBAAOc,QAAQ,OAAf,kBACA,cAACb,GAAD,CACC9D,KAAK,OACLrD,KAAK,OACLuD,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBkE,EAAQlE,EAAOF,QACzCA,MAAOtD,OAIT,eAACkH,GAAD,WACC,uBAAOc,QAAQ,WAAf,sBACA,cAACb,GAAD,CACC9D,KAAK,WACLrD,KAAK,WACLuD,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBoE,EAAYpE,EAAOF,QAC7CA,MAAOqE,OAIT,cAACZ,GAAD,UACC,cAAC,GAAD,CAAQ7G,QAAQ,GAAGmD,KAAK,SAAxB,uBAKD,cAAC+D,GAAD,UACC,wBAAQjH,QArEQ,SAACmC,GACpBA,EAAMC,iBACNgF,GAAiBD,IAmEd,uDClJCrH,GAASb,YAAO0H,IAAP1H,CAAH,yJASN2H,GAAkB3H,IAAOC,IAAV,6DAKfF,GAAYC,YAAOuG,KAAPvG,CAAH,mKAST4H,GAAiB5H,IAAOC,IAAV,oIAUduC,GAAOxC,IAAO6H,KAAV,oIAQJC,GAAiB9H,IAAOC,IAAV,kNAWd8H,GAAQ/H,YAAOwG,KAAPxG,CAAH,mDAILgI,GAAgBhI,IAAOC,IAAV,gLA6FJ4I,GAjFG,SAAC,GAUZ,IATNX,EASK,EATLA,aACAC,EAQK,EARLA,gBACA9H,EAOK,EAPLA,WACAC,EAMK,EANLA,cACAE,EAKK,EALLA,QACA4H,EAIK,EAJLA,SACAC,EAGK,EAHLA,YACAE,EAEK,EAFLA,SACAC,EACK,EADLA,YASMvF,EAAY,uCAAG,WAAOC,GAAP,iBAAAjE,EAAA,6DACpBiE,EAAMC,iBAEA2F,EAAkB,CACvBV,SAAUA,EACVG,SAAUA,GALS,kBAQAQ,GAASvB,MAAMsB,GARf,OAQbvI,EARa,OASnBS,OAAOC,aAAa+H,QAAQ,eAAgBC,KAAKC,UAAU3I,IAC3DY,EAAWzC,SAAS6B,EAAKvC,OACzBoD,EAAa1C,SAAS6B,EAAKvC,OAC3BqK,EAAY,IACZG,EAAY,IACZhI,EAAQD,GACRD,GAAeD,GAfI,kDAiBnBgC,KAAM8G,MAAM,qBACZ5F,QAAQC,IAAI,KAAUC,SAlBH,0DAAH,sDAsBlB,OACC,eAAC,GAAD,WACC,cAAC,KAAD,CAAgB2F,aAAa,EAAMC,UAAW,MAC9C,cAAC,GAAD,UACC,qBAAK5I,IAAI,mBAAmBC,IAAI,OAEjC,eAAC,GAAD,CAAMqD,SAAUd,EAAhB,UACC,eAAC,GAAD,WACC,uBAAO2F,QAAQ,WAAf,sBACA,cAAC,GAAD,CACC3E,KAAK,OACLrD,KAAK,WACLuD,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBiE,EAAYjE,EAAOF,QAC7CA,MAAOkE,OAIT,eAAC,GAAD,WACC,uBAAOQ,QAAQ,WAAf,sBACA,cAAC,GAAD,CACC3E,KAAK,WACLrD,KAAK,WACLuD,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBoE,EAAYpE,EAAOF,QAC7CA,MAAOqE,OAIT,cAAC,GAAD,UACC,cAAC,GAAD,CAAQzH,QAAQ,UAAUmD,KAAK,SAA/B,qBAKD,cAAC,GAAD,UACC,wBAAQlD,QA/DQ,SAACmC,GACpBA,EAAMC,iBACNgF,GAAiBD,GACjBG,EAAY,IACZG,EAAY,KA2DT,qDC9ICzI,GAAYC,YAAOuG,KAAPvG,CAAH,0BAETsJ,GAAetJ,IAAOC,IAAV,gGAIF,SAACsJ,GAAD,OAAYA,EAAMlJ,WAAa,MAAQ,WAEjDmJ,GAAgBxJ,YAAO+E,KAAP/E,CAAH,uJAoGJyJ,GA3FH,WACX,MAAkC7H,mBAAS,IAA3C,mBAAOJ,EAAP,KAAkBC,EAAlB,KACA,EAA8BG,mBAAS,IAAvC,mBAAOgB,EAAP,KAAgBC,EAAhB,KACA,EAAoCjB,oBAAS,GAA7C,mBAAOvB,EAAP,KAAmBC,EAAnB,KACA,EAAwCsB,oBAAS,GAAjD,mBAAOsG,EAAP,KAAqBC,EAArB,KACA,EAAwBvG,mBAAS,IAAjC,mBAAOrB,EAAP,KAAaC,EAAb,KACA,EAAgCoB,mBAAS,IAAzC,mBAAOwG,EAAP,KAAiBC,EAAjB,KACA,EAAgCzG,mBAAS,IAAzC,mBAAO2G,EAAP,KAAiBC,EAAjB,KAEAzG,qBAAU,WACT,IAAM2H,EAAiB1I,OAAOC,aAAa0I,QAAQ,gBACnD,GAAID,EAAgB,CACnB,IAAMnJ,EAAO0I,KAAKW,MAAMF,GACxBlJ,EAAQD,GACRY,EAAWzC,SAAS6B,EAAKvC,OACzBoD,EAAa1C,SAAS6B,EAAKvC,OAC3BsC,GAAc,GAGXD,GACHc,EAAWjD,SAAS2L,MAAK,SAACpE,GACzB5C,EAAW4C,EAASnD,SAErBlB,EAAapC,kBAAkB6K,MAAK,SAACpE,GACpChE,EAAagE,EAASnD,UAGvBb,EAAa,MAEZ,CAACpB,IAEJ,IAAMyJ,EACL,eAAC,GAAD,CAAWC,MAAM,KAAKpJ,UAAU,iBAAhC,UACC,cAAC,KAAD,IAEA,cAAC0F,GAAA,EAAD,CAAK1F,UAAU,QAAf,SACC,cAAC,GAAD,CACCN,WAAYA,EACZC,cAAeA,EACfC,KAAMA,EACNC,QAASA,MAIX,eAAC6F,GAAA,EAAD,CAAK5B,GAAI,GAAI4C,WAAW,EAAxB,UACC,cAAC,GAAD,CACC7F,UAAWA,EACXC,aAAcA,EACdmB,QAASA,EACTC,WAAYA,IAGb,cAAC2G,GAAD,CAAehF,GAAI,EAAnB,SACC,cAAC,GAAD,CACChD,UAAWA,EACXC,aAAcA,EACdmB,QAASA,EACTC,WAAYA,EACZtC,KAAMA,YAOX,OACC,cAAC+I,GAAD,CAAcjJ,WAAYA,EAA1B,SACEA,EACAyJ,EACI5B,EAMJ,cAAC,GAAD,CACC1H,QAASA,EACT0H,aAAcA,EACdC,gBAAiBA,EACjB9H,WAAYA,EACZC,cAAeA,EACf8H,SAAUA,EACVC,YAAaA,EACbE,SAAUA,EACVC,YAAaA,IAdd,cAAC,GAAD,CACCN,aAAcA,EACdC,gBAAiBA,O,MC3BtB6B,IAASC,OAAO,cAAC,GAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.1d160475.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\nconst baseUrl = '/api/results'\r\n\r\nconst getAll = () => {\r\n\treturn axios.get(baseUrl)\r\n}\r\n\r\nlet token = null\r\n\r\nconst setToken = (newToken) => {\r\n\ttoken = `bearer ${newToken}`\r\n}\r\n\r\nconst getAllSelected = () => {\r\n\treturn axios.get(`${baseUrl}/user/${token}`)\r\n}\r\n\r\nconst update = (id, updatedObject) => {\r\n\treturn axios.put(`${baseUrl}/${id}`, updatedObject)\r\n}\r\n\r\nconst findResultNotFromPlaylist = (id) => {\r\n\tconst config = {\r\n\t\theaders: {\r\n\t\t\tAuthorization: token,\r\n\t\t},\r\n\t}\r\n\r\n\treturn axios.get(`${baseUrl}/${id}`, config)\r\n}\r\n\r\nconst object = {\r\n\tgetAll,\r\n\tgetAllSelected,\r\n\tupdate,\r\n\tsetToken,\r\n\tfindResultNotFromPlaylist,\r\n}\r\n\r\nexport default object\r\n","import axios from 'axios'\r\n\r\nconst baseUrl = '/api/playlist'\r\n\r\nlet token = null\r\n\r\nconst setToken = (newToken) => {\r\n\ttoken = `bearer ${newToken}`\r\n}\r\n\r\nconst getAllPlaylists = async () => {\r\n\tconst config = {\r\n\t\theaders: { Authorization: token },\r\n\t}\r\n\tconst request = await axios.get(baseUrl, config)\r\n\r\n\treturn request\r\n}\r\n\r\nconst create = async (newPlaylistItem) => {\r\n\tconst config = {\r\n\t\theaders: { Authorization: token },\r\n\t}\r\n\r\n\treturn await axios.post(baseUrl, newPlaylistItem, config)\r\n}\r\n\r\nconst deleteItemFromPlaylist = async (item_id, playlist_id) => {\r\n\tconst request_body = {\r\n\t\tplaylist_id,\r\n\t}\r\n\r\n\treturn await axios.put(`${baseUrl}/${item_id}`, request_body)\r\n}\r\n\r\nconst addToPlaylist = async (playlist_id, result_id) => {\r\n\tconst updated = {\r\n\t\tplaylist_id,\r\n\t\tresult_id,\r\n\t}\r\n\r\n\treturn await axios.put(`${baseUrl}/result/${result_id}`, updated)\r\n}\r\n\r\nconst removePlaylist = async (playlist_id) => {\r\n\treturn await axios.delete(`${baseUrl}/${playlist_id}`)\r\n}\r\n\r\nconst object = {\r\n\tgetAllPlaylists,\r\n\tcreate,\r\n\tdeleteItemFromPlaylist,\r\n\tsetToken,\r\n\taddToPlaylist,\r\n\tremovePlaylist,\r\n}\r\n\r\nexport default object\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Button } from 'react-bootstrap'\r\nimport resultsApi from '../services/results'\r\nimport playlistsApi from '../services/playlists'\r\n\r\nconst Container = styled.div`\r\n\tbackground-color: #fff;\r\n\tdisplay: flex;\r\n\tflex-flow: row wrap;\r\n\tjustify-content: space-between;\r\n\tpadding: 20px 20px;\r\n\tmargin-bottom: 10px;\r\n\tmargin-top: 10px;\r\n\tborder-radius: 8px;\r\n`\r\nconst Logo = styled.div`\r\n\tanimation-name: rotate-logo;\r\n\tanimation-duration: 1.7s;\r\n\r\n\tdisplay: flex;\r\n\tflex-flow: row;\r\n\tcolor: #fff;\r\n\r\n\timg {\r\n\t\twidth: 50px;\r\n\t}\r\n`\r\nconst User = styled.div`\r\n\tdisplay: flex;\r\n\tflex-flow: row;\r\n\tanimation-name: move-user;\r\n\tanimation-duration: 1.7s;\r\n\talign-items: center;\r\n\r\n\tbutton {\r\n\t\tmargin-right: 10px;\r\n\t\tcolor: #fff;\r\n\t\tfont-size: 1.1rem;\r\n\t}\r\n\r\n\t.userName {\r\n\t\tmargin-right: 10px;\r\n\t\tfont-weight: 600;\r\n\t}\r\n`\r\n\r\nconst Nav = ({ isLoggedIn, setIsLoggedIn, user, setUser }) => {\r\n\tconst handleClick = () => {\r\n\t\tsetIsLoggedIn(!isLoggedIn)\r\n\t\tsetUser(null)\r\n\t\twindow.localStorage.clear()\r\n\t\tresultsApi.setToken(null)\r\n\t\tplaylistsApi.setToken(null)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<Logo>\r\n\t\t\t\t<img src='images/logo2.svg' alt='' id='logo' />\r\n\t\t\t</Logo>\r\n\r\n\t\t\t<User>\r\n\t\t\t\t<h4>\r\n\t\t\t\t\tWelcome <span className='userName'>{user.name}</span>\r\n\t\t\t\t</h4>\r\n\t\t\t\t<Button variant='warning' onClick={() => handleClick()}>\r\n\t\t\t\t\tLogout\r\n\t\t\t\t</Button>\r\n\t\t\t\t<img src='images/user.svg' alt='' />\r\n\t\t\t</User>\r\n\t\t</Container>\r\n\t)\r\n}\r\nexport default Nav\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Button } from 'react-bootstrap'\r\nimport playlistApi from '../services/playlists'\r\nimport styled from 'styled-components'\r\nimport { toast } from 'react-toastify'\r\n\r\nconst List = styled.li`\r\n\tline-height: 2rem;\r\n\tdisplay: flex;\r\n\tflex-flow: row;\r\n\tjustify-content: space-between;\r\n\tmin-width: 200px;\r\n\tmax-width: 400px;\r\n\tborder: 1px solid #aaa;\r\n\tborder-radius: 3px;\r\n\tmargin-bottom: 10px;\r\n\tpadding: 10px;\r\n`\r\n\r\nconst PlaylistItem = ({ playlists, setPlaylists, playlist, playlist_item }) => {\r\n\tconst [noItems, setNoItems] = useState(false)\r\n\r\n\tuseEffect(() => {\r\n\t\tif (playlist_item.length === 0) {\r\n\t\t\tsetNoItems(true)\r\n\t\t}\r\n\t}, [playlist_item.length])\r\n\r\n\tconst handleClick = async (item_id, playlist_id) => {\r\n\t\tawait playlistApi.deleteItemFromPlaylist(item_id, playlist_id)\r\n\r\n\t\tconst savedPlaylists = await playlistApi.getAllPlaylists()\r\n\t\tif (savedPlaylists.status === 400) {\r\n\t\t\ttoast('duplicate playlist name')\r\n\t\t} else {\r\n\t\t\tsetPlaylists(savedPlaylists.data)\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<List>\r\n\t\t\t{noItems ? (\r\n\t\t\t\t<h5>No Items</h5>\r\n\t\t\t) : (\r\n\t\t\t\t<>\r\n\t\t\t\t\t{playlist_item.name} by {playlist_item.artist}\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tvariant='danger'\r\n\t\t\t\t\t\t\tonClick={() => handleClick(playlist_item.id, playlist.id)}>\r\n\t\t\t\t\t\t\tRemove\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</>\r\n\t\t\t)}\r\n\t\t</List>\r\n\t)\r\n}\r\n\r\nexport default PlaylistItem\r\n","import React, { useState } from 'react'\r\nimport PlaylistItem from './PlaylistItem'\r\nimport { toast } from 'react-toastify'\r\nimport { Button, Form as BootstrapForm } from 'react-bootstrap'\r\nimport styled from 'styled-components'\r\nimport playlistsApi from '../services/playlists'\r\n\r\nconst Form = styled(BootstrapForm)`\r\n\tdisplay: flex;\r\n\r\n\tbutton {\r\n\t\tmargin-left: 10px;\r\n\t}\r\n`\r\n\r\nconst PlaylistContainer = styled.div`\r\n\tmargin-bottom: 20px;\r\n\tborder-bottom: 1px solid #aaa;\r\n\tpadding: 10px;\r\n\r\n\tbutton {\r\n\t\tmargin-left: 10px;\r\n\t}\r\n`\r\n\r\nconst Container = styled.div`\r\n\tdisplay: flex;\r\n\tflex-flow: row wrap;\r\n\tmargin-bottom: 20px;\r\n`\r\n\r\nconst Playlist = ({\r\n\tplaylists,\r\n\tsetPlaylists,\r\n\tresults,\r\n\tsetResults,\r\n\tonStart,\r\n}) => {\r\n\tconst [playlistName, setPlaylistName] = useState('')\r\n\r\n\tconst handleSubmit = async (event) => {\r\n\t\tevent.preventDefault()\r\n\t\tif (playlistName !== '') {\r\n\t\t\tconst newPlaylist = {\r\n\t\t\t\tname: playlistName,\r\n\t\t\t}\r\n\r\n\t\t\ttry {\r\n\t\t\t\tconst savedPlaylist = await playlistsApi.create(newPlaylist)\r\n\t\t\t\tsetPlaylists(playlists.concat(savedPlaylist.data))\r\n\t\t\t\tsetPlaylistName('')\r\n\t\t\t} catch (exception) {\r\n\t\t\t\tconsole.log(exception.message)\r\n\t\t\t\ttoast.info('Duplicate Playlist Name')\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tconst deletePlaylist = async (id) => {\r\n\t\tawait playlistsApi.removePlaylist(id)\r\n\r\n\t\tconst savedPlaylists = await playlistsApi.getAllPlaylists()\r\n\t\tsetPlaylists(savedPlaylists.data)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h2>Playlists</h2>\r\n\t\t\t<hr />\r\n\t\t\t{playlists.map((playlist) => (\r\n\t\t\t\t<PlaylistContainer key={playlist.id}>\r\n\t\t\t\t\t<Container>\r\n\t\t\t\t\t\t<h3>{playlist.name}</h3>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tvariant='danger'\r\n\t\t\t\t\t\t\t\tonClick={() => deletePlaylist(playlist.id)}>\r\n\t\t\t\t\t\t\t\tRemove\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Container>\r\n\r\n\t\t\t\t\t{playlist.playlist_items.map((item) => (\r\n\t\t\t\t\t\t<PlaylistItem\r\n\t\t\t\t\t\t\tplaylist={playlist}\r\n\t\t\t\t\t\t\tplaylists={playlists}\r\n\t\t\t\t\t\t\tsetPlaylists={setPlaylists}\r\n\t\t\t\t\t\t\tplaylist_item={item}\r\n\t\t\t\t\t\t\tkey={item.id}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</PlaylistContainer>\r\n\t\t\t))}\r\n\t\t\t<Form onSubmit={handleSubmit}>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\tvalue={playlistName}\r\n\t\t\t\t\t\tonChange={({ target }) => setPlaylistName(target.value)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<Button variant='success' type='submit'>\r\n\t\t\t\t\t\tAdd Playlist\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</div>\r\n\t\t\t</Form>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default Playlist\r\n","import React from 'react'\r\nimport Playlist from './Playlist'\r\nimport styled from 'styled-components'\r\nimport { Col as BootstrapColumn } from 'react-bootstrap'\r\nconst Column = styled(BootstrapColumn)`\r\n\tbackground-color: #fff;\r\n\tpadding: 20px;\r\n\tmin-height: 200px;\r\n\tborder-right: 1px solid #aaa;\r\n`\r\n\r\nconst Side = ({ playlists, setPlaylists, results, setResults, onStart }) => {\r\n\treturn (\r\n\t\t<Column md='4' xs='12'>\r\n\t\t\t<Playlist\r\n\t\t\t\tplaylists={playlists}\r\n\t\t\t\tsetPlaylists={setPlaylists}\r\n\t\t\t\tresults={results}\r\n\t\t\t\tsetResults={setResults}\r\n\t\t\t\tonStart={onStart}\r\n\t\t\t/>\r\n\t\t</Column>\r\n\t)\r\n}\r\n\r\nexport default Side\r\n","import React, { useState } from 'react'\r\nimport {\r\n\tButton,\r\n\tCol,\r\n\tRow,\r\n\tCard as BootstrapCard,\r\n\tModal as BootstrapModal,\r\n} from 'react-bootstrap'\r\nimport playlistsApi from '../services/playlists'\r\nimport resultsApi from '../services/results'\r\nimport styled from 'styled-components'\r\n\r\nconst Modal = styled(BootstrapModal)`\r\n\t.modal-body li {\r\n\t\tdisplay: flex;\r\n\t\tflex-flow: row wrap;\r\n\t\tjustify-content: space-between;\r\n\t\tline-height: 3.2rem;\r\n\t}\r\n`\r\n\r\nconst Card = styled(BootstrapCard)`\r\n\tmargin-bottom: 20px;\r\n\tborder-bottom-left-radius: 10px;\r\n\tborder-bottom-right-radius: 10px;\r\n\r\n\t.card-image {\r\n\t\tborder-radius: 10px;\r\n\t}\r\n`\r\n\r\nconst ButtonColumnContainer = styled(Col)`\r\n\tdisplay: flex;\r\n\tflex-flow: column wrap;\r\n\talign-items: center;\r\n\tmargin: 0;\r\n`\r\n\r\nconst Result = ({\r\n\tresult,\r\n\tresults,\r\n\tsetResults,\r\n\tplaylists,\r\n\tsetPlaylists,\r\n\tuser,\r\n}) => {\r\n\tconst [show, setShow] = useState(false)\r\n\r\n\tconst handleClick = () => {\r\n\t\tsetShow(true)\r\n\t}\r\n\r\n\tconst handleClose = () => {\r\n\t\tsetShow(false)\r\n\t}\r\n\r\n\tconst addToPlaylist = async (playlistId, resultId) => {\r\n\t\tawait playlistsApi.addToPlaylist(playlistId, resultId)\r\n\t\tconst playlistToFind = playlists.find(\r\n\t\t\t(playlist) => playlist.id === playlistId\r\n\t\t)\r\n\r\n\t\tconst playlist_items = playlistToFind.playlist_items.concat(result)\r\n\r\n\t\tsetPlaylists(\r\n\t\t\tplaylists.map((playlist) =>\r\n\t\t\t\tplaylist.id === playlistId\r\n\t\t\t\t\t? { ...playlistToFind, playlist_items: playlist_items }\r\n\t\t\t\t\t: playlist\r\n\t\t\t)\r\n\t\t)\r\n\r\n\t\tconst response = await resultsApi.getAll()\r\n\r\n\t\tsetResults(response.data)\r\n\r\n\t\tsetShow(false)\r\n\t}\r\n\r\n\tconst cardState = result.isAdded ? 'result-added' : 'result-removed'\r\n\r\n\tconst emptyPlaylist = () => <h4>No playlists added</h4>\r\n\r\n\tconst notEmptyPlaylist = () =>\r\n\t\tplaylists.map((playlist) =>\r\n\t\t\tplaylist.playlist_items.find((item) => item.id === result.id) ? (\r\n\t\t\t\t<li key={playlist.id}>{playlist.name} (Added)</li>\r\n\t\t\t) : (\r\n\t\t\t\t<li key={playlist.id}>\r\n\t\t\t\t\t{playlist.name}\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tvariant='success'\r\n\t\t\t\t\t\t\tonClick={() => addToPlaylist(playlist.id, result.id)}>\r\n\t\t\t\t\t\t\tAdd\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</li>\r\n\t\t\t)\r\n\t\t)\r\n\r\n\treturn (\r\n\t\t<Col xs={6} md={6} sm={6} lg={4} xl={3}>\r\n\t\t\t<Modal show={show} size='sm' onHide={handleClose}>\r\n\t\t\t\t<Modal.Header>\r\n\t\t\t\t\t<Modal.Title>Add to Playlists</Modal.Title>\r\n\t\t\t\t\t<Button variant='danger' onClick={handleClose}>\r\n\t\t\t\t\t\tx\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</Modal.Header>\r\n\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t{playlists.length > 0 ? notEmptyPlaylist() : emptyPlaylist()}\r\n\t\t\t\t</Modal.Body>\r\n\t\t\t</Modal>\r\n\r\n\t\t\t<Card className={`${cardState}`}>\r\n\t\t\t\t{/* <div className='card-image'>\r\n\t\t\t\t\t<img src='images/playThumbnail.svg' />\r\n\t\t\t\t</div> */}\r\n\t\t\t\t<div className='card-image'>\r\n\t\t\t\t\t<img src={result.imgSource} alt='' />\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<Row className='card-body'>\r\n\t\t\t\t\t<Col xs={12} sm={8} md={12} lg={12}>\r\n\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t<h3>{result.name}</h3>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t<h4>by {result.artist}</h4>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</Col>\r\n\r\n\t\t\t\t\t<ButtonColumnContainer xs='auto' sm='auto' md='auto' lg='auto'>\r\n\t\t\t\t\t\t<Button variant='success' onClick={handleClick}>\r\n\t\t\t\t\t\t\tAdd\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</ButtonColumnContainer>\r\n\t\t\t\t</Row>\r\n\t\t\t</Card>\r\n\t\t</Col>\r\n\t)\r\n}\r\n\r\nexport default Result\r\n","import React, { useState, useEffect } from 'react'\r\nimport Result from './Result'\r\nimport {\r\n\tContainer as BootstrapContainer,\r\n\tRow,\r\n\tForm as BootstrapForm,\r\n} from 'react-bootstrap'\r\nimport styled from 'styled-components'\r\n\r\nconst ResultsContainer = styled(BootstrapContainer)`\r\n\tmargin-top: 10px;\r\n\tpadding-top: 10px;\r\n`\r\n\r\nconst FormControl = styled(BootstrapForm.Control)`\r\n\tborder-radius: 5px;\r\n\tpadding: 10px;\r\n\tfont-size: 1.1rem;\r\n\tborder: 1px solid #999;\r\n`\r\n\r\nconst Results = ({ results, setResults, playlists, setPlaylists, user }) => {\r\n\tconst [searchItem, setSearchItem] = useState('')\r\n\tconst [filteredResults, setFilteredResults] = useState([])\r\n\r\n\tuseEffect(() => {\r\n\t\tconst pattern = new RegExp(searchItem, 'i')\r\n\t\tsetFilteredResults(\r\n\t\t\tresults.filter((result) => {\r\n\t\t\t\tif (pattern.test(result.name) || pattern.test(result.artist)) {\r\n\t\t\t\t\treturn result\r\n\t\t\t\t}\r\n\t\t\t\treturn null\r\n\t\t\t})\r\n\t\t)\r\n\t}, [searchItem, results])\r\n\r\n\tconst handleChange = (event) => {\r\n\t\tsetSearchItem(event.target.value)\r\n\t}\r\n\r\n\tconst handleSubmit = (event) => {\r\n\t\tevent.preventDefault()\r\n\t\t// console.log('Results: ', searchItem)\r\n\t}\r\n\r\n\tconst resultsCounter = filteredResults.length\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h2>Results</h2>\r\n\t\t\t<BootstrapForm id='search' onSubmit={handleSubmit}>\r\n\t\t\t\t<FormControl\r\n\t\t\t\t\ttype='text'\r\n\t\t\t\t\tplaceholder='Search'\r\n\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\tvalue={searchItem}\r\n\t\t\t\t\tautoComplete='off'></FormControl>\r\n\t\t\t</BootstrapForm>\r\n\r\n\t\t\t<ResultsContainer>\r\n\t\t\t\t<Row noGutters={true}>\r\n\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t{resultsCounter > 0 ? resultsCounter : 'No'}{' '}\r\n\t\t\t\t\t\t{resultsCounter > 1 ? `results` : 'result'} found\r\n\t\t\t\t\t</h3>\r\n\t\t\t\t\t{filteredResults.length > 0\r\n\t\t\t\t\t\t? filteredResults.map((result) => {\r\n\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t<Result\r\n\t\t\t\t\t\t\t\t\t\tkey={result.id}\r\n\t\t\t\t\t\t\t\t\t\tsetPlaylists={setPlaylists}\r\n\t\t\t\t\t\t\t\t\t\tplaylists={playlists}\r\n\t\t\t\t\t\t\t\t\t\tresult={result}\r\n\t\t\t\t\t\t\t\t\t\tresults={results}\r\n\t\t\t\t\t\t\t\t\t\tsetResults={setResults}\r\n\t\t\t\t\t\t\t\t\t\tuser={user}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t  })\r\n\t\t\t\t\t\t: ''}\r\n\t\t\t\t</Row>\r\n\t\t\t</ResultsContainer>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default Results\r\n","import axios from 'axios'\r\n\r\nconst baseUrl = '/api/users'\r\n\r\nconst create = async (newObject) => {\r\n\treturn await axios.post(baseUrl, newObject)\r\n}\r\n\r\nconst login = async (credentials) => {\r\n\tconst response = await axios.post(`${baseUrl}/login`, credentials)\r\n\treturn response.data\r\n}\r\n\r\nconst users = {\r\n\tcreate,\r\n\tlogin,\r\n}\r\n\r\nexport default users\r\n","import React, { useState } from 'react'\r\nimport {\r\n\tContainer as BootstrapContainer,\r\n\tButton as BootstrapButton,\r\n\tFormControl,\r\n} from 'react-bootstrap'\r\nimport styled from 'styled-components'\r\nimport usersProvider from '../services/users'\r\n\r\nconst Button = styled(BootstrapButton)`\r\n\tdisplay: flex;\r\n\tflex-flow: row wrap;\r\n\tjustify-content: center;\r\n\twidth: 100%;\r\n\theight: 100%;\r\n\tfont-size: 1.2rem;\r\n\tbackground-color: orange;\r\n\tcolor: #fff;\r\n\r\n\t:hover {\r\n\t\tbackground-color: rgba(200, 130, 50);\r\n\t\tcolor: #fff;\r\n\t}\r\n`\r\n\r\nconst ButtonContainer = styled.div`\r\n\twidth: 100%;\r\n\theight: 45px;\r\n`\r\n\r\nconst Container = styled(BootstrapContainer)`\r\n\tbackground-color: #fff;\r\n\tdisplay: flex;\r\n\tflex-flow: column wrap;\r\n\twidth: 500px;\r\n\tpadding: 20px 60px;\r\n\tborder-radius: 8px;\r\n`\r\n\r\nconst ImageContainer = styled.div`\r\n\tdisplay: flex;\r\n\tflex-flow: row wrap;\r\n\tjustify-content: center;\r\n\r\n\timg {\r\n\t\twidth: 60px;\r\n\t}\r\n`\r\n\r\nconst Form = styled.form`\r\n\tpadding: 10px;\r\n\tmargin: 10px;\r\n\tdisplay: flex;\r\n\tflex-flow: column wrap;\r\n\talign-items: center;\r\n`\r\n\r\nconst InputContainer = styled.div`\r\n\tdisplay: flex;\r\n\tmargin-bottom: 10px;\r\n\tflex-flow: row wrap;\r\n\tjustify-content: space-between;\r\n\twidth: 100%;\r\n\tlabel {\r\n\t\tfont-size: 0.9rem;\r\n\t\tmargin-bottom: 3px;\r\n\t}\r\n`\r\nconst Input = styled(FormControl)`\r\n\tborder-radius: 5px;\r\n`\r\n\r\nconst LinkContainer = styled.div`\r\n\tmargin-top: 10px;\r\n\tfont-size: 1rem;\r\n\r\n\tbutton {\r\n\t\tbackground-color: #fff;\r\n\t\tborder: none;\r\n\t\tcolor: #3cae67f9;\r\n\t\tbox-shadow: 0;\r\n\t}\r\n`\r\n\r\nconst RegisterForm = ({ isRegistered, setIsRegistered }) => {\r\n\tconst [username, setUsername] = useState('')\r\n\tconst [name, setName] = useState('')\r\n\tconst [password, setPassword] = useState('')\r\n\r\n\tconst handleClick = (event) => {\r\n\t\tevent.preventDefault()\r\n\t\tsetIsRegistered(!isRegistered)\r\n\t}\r\n\r\n\tconst createNewUser = async (newUser) => {\r\n\t\tawait usersProvider.create(newUser)\r\n\t}\r\n\r\n\tconst handleSubmit = (event) => {\r\n\t\tevent.preventDefault()\r\n\r\n\t\tconst newUser = {\r\n\t\t\tusername: username,\r\n\t\t\tname: name,\r\n\t\t\tpassword: password,\r\n\t\t}\r\n\r\n\t\tcreateNewUser(newUser)\r\n\r\n\t\tsetIsRegistered(!isRegistered)\r\n\t\tsetName('')\r\n\t\tsetUsername('')\r\n\t\tsetPassword('')\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<ImageContainer>\r\n\t\t\t\t<img src='images/logo2.svg' alt='' />\r\n\t\t\t</ImageContainer>\r\n\t\t\t<Form onSubmit={handleSubmit}>\r\n\t\t\t\t<InputContainer>\r\n\t\t\t\t\t<label htmlFor='username'>Username</label>\r\n\t\t\t\t\t<Input\r\n\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\tname='username'\r\n\t\t\t\t\t\tonChange={({ target }) => setUsername(target.value)}\r\n\t\t\t\t\t\tvalue={username}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</InputContainer>\r\n\r\n\t\t\t\t<InputContainer>\r\n\t\t\t\t\t<label htmlFor='name'>Name</label>\r\n\t\t\t\t\t<Input\r\n\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\tonChange={({ target }) => setName(target.value)}\r\n\t\t\t\t\t\tvalue={name}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</InputContainer>\r\n\r\n\t\t\t\t<InputContainer>\r\n\t\t\t\t\t<label htmlFor='password'>Password</label>\r\n\t\t\t\t\t<Input\r\n\t\t\t\t\t\ttype='password'\r\n\t\t\t\t\t\tname='password'\r\n\t\t\t\t\t\tonChange={({ target }) => setPassword(target.value)}\r\n\t\t\t\t\t\tvalue={password}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</InputContainer>\r\n\r\n\t\t\t\t<ButtonContainer>\r\n\t\t\t\t\t<Button variant='' type='submit'>\r\n\t\t\t\t\t\tSign Up\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</ButtonContainer>\r\n\r\n\t\t\t\t<LinkContainer>\r\n\t\t\t\t\t<button onClick={handleClick}>\r\n\t\t\t\t\t\tAlready have an account: Sign In\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</LinkContainer>\r\n\t\t\t</Form>\r\n\t\t</Container>\r\n\t)\r\n}\r\n\r\nexport default RegisterForm\r\n","import React from 'react'\r\nimport {\r\n\tContainer as BootstrapContainer,\r\n\tButton as BootstrapButton,\r\n\tFormControl,\r\n} from 'react-bootstrap'\r\nimport { ToastContainer, toast } from 'react-toastify'\r\nimport styled from 'styled-components'\r\nimport usersApi from '../services/users'\r\nimport resultsApi from '../services/results'\r\nimport playlistsApi from '../services/playlists'\r\n\r\nconst Button = styled(BootstrapButton)`\r\n\tdisplay: flex;\r\n\tflex-flow: row wrap;\r\n\tjustify-content: center;\r\n\twidth: 100%;\r\n\theight: 100%;\r\n\tfont-size: 1.2rem;\r\n`\r\n\r\nconst ButtonContainer = styled.div`\r\n\twidth: 100%;\r\n\theight: 45px;\r\n`\r\n\r\nconst Container = styled(BootstrapContainer)`\r\n\tbackground-color: #fff;\r\n\tdisplay: flex;\r\n\tflex-flow: column wrap;\r\n\twidth: 500px;\r\n\tpadding: 20px 60px;\r\n\tborder-radius: 8px;\r\n`\r\n\r\nconst ImageContainer = styled.div`\r\n\tdisplay: flex;\r\n\tflex-flow: row wrap;\r\n\tjustify-content: center;\r\n\r\n\timg {\r\n\t\twidth: 60px;\r\n\t}\r\n`\r\n\r\nconst Form = styled.form`\r\n\tpadding: 10px;\r\n\tmargin: 10px;\r\n\tdisplay: flex;\r\n\tflex-flow: column wrap;\r\n\talign-items: center;\r\n`\r\n\r\nconst InputContainer = styled.div`\r\n\tdisplay: flex;\r\n\tmargin-bottom: 10px;\r\n\tflex-flow: row wrap;\r\n\tjustify-content: space-between;\r\n\twidth: 100%;\r\n\tlabel {\r\n\t\tfont-size: 0.9rem;\r\n\t\tmargin-bottom: 3px;\r\n\t}\r\n`\r\nconst Input = styled(FormControl)`\r\n\tborder-radius: 5px;\r\n`\r\n\r\nconst LinkContainer = styled.div`\r\n\tmargin-top: 10px;\r\n\tfont-size: 1rem;\r\n\r\n\tbutton {\r\n\t\tbackground-color: #fff;\r\n\t\tborder: none;\r\n\t\tcolor: orange;\r\n\t\tbox-shadow: 0;\r\n\t}\r\n`\r\n\r\nconst LoginForm = ({\r\n\tisRegistered,\r\n\tsetIsRegistered,\r\n\tisLoggedIn,\r\n\tsetIsLoggedIn,\r\n\tsetUser,\r\n\tusername,\r\n\tsetUsername,\r\n\tpassword,\r\n\tsetPassword,\r\n}) => {\r\n\tconst handleClick = (event) => {\r\n\t\tevent.preventDefault()\r\n\t\tsetIsRegistered(!isRegistered)\r\n\t\tsetUsername('')\r\n\t\tsetPassword('')\r\n\t}\r\n\r\n\tconst handleSubmit = async (event) => {\r\n\t\tevent.preventDefault()\r\n\r\n\t\tconst userCredentials = {\r\n\t\t\tusername: username,\r\n\t\t\tpassword: password,\r\n\t\t}\r\n\t\ttry {\r\n\t\t\tconst user = await usersApi.login(userCredentials)\r\n\t\t\twindow.localStorage.setItem('loggedInUser', JSON.stringify(user))\r\n\t\t\tresultsApi.setToken(user.token)\r\n\t\t\tplaylistsApi.setToken(user.token)\r\n\t\t\tsetUsername('')\r\n\t\t\tsetPassword('')\r\n\t\t\tsetUser(user)\r\n\t\t\tsetIsLoggedIn(!isLoggedIn)\r\n\t\t} catch (exception) {\r\n\t\t\ttoast.error('Wrong Credentials')\r\n\t\t\tconsole.log(exception.message)\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<ToastContainer newestOnTop={true} autoClose={3000} />\r\n\t\t\t<ImageContainer>\r\n\t\t\t\t<img src='images/logo2.svg' alt='' />\r\n\t\t\t</ImageContainer>\r\n\t\t\t<Form onSubmit={handleSubmit}>\r\n\t\t\t\t<InputContainer>\r\n\t\t\t\t\t<label htmlFor='username'>Username</label>\r\n\t\t\t\t\t<Input\r\n\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\tname='username'\r\n\t\t\t\t\t\tonChange={({ target }) => setUsername(target.value)}\r\n\t\t\t\t\t\tvalue={username}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</InputContainer>\r\n\r\n\t\t\t\t<InputContainer>\r\n\t\t\t\t\t<label htmlFor='password'>Password</label>\r\n\t\t\t\t\t<Input\r\n\t\t\t\t\t\ttype='password'\r\n\t\t\t\t\t\tname='password'\r\n\t\t\t\t\t\tonChange={({ target }) => setPassword(target.value)}\r\n\t\t\t\t\t\tvalue={password}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</InputContainer>\r\n\r\n\t\t\t\t<ButtonContainer>\r\n\t\t\t\t\t<Button variant='success' type='submit'>\r\n\t\t\t\t\t\tLogin\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</ButtonContainer>\r\n\r\n\t\t\t\t<LinkContainer>\r\n\t\t\t\t\t<button onClick={handleClick}>Don't have an account: Sign Up</button>\r\n\t\t\t\t</LinkContainer>\r\n\t\t\t</Form>\r\n\t\t</Container>\r\n\t)\r\n}\r\n\r\nexport default LoginForm\r\n","import Nav from './components/Nav'\r\nimport Side from './components/Side'\r\nimport Results from './components/Results'\r\nimport RegisterForm from './components/RegisterForm'\r\nimport LoginForm from './components/LoginForm'\r\nimport React, { useState, useEffect } from 'react'\r\nimport { Container as BootstrapContainer, Row, Col } from 'react-bootstrap'\r\nimport resultsApi from './services/results'\r\nimport playlistsApi from './services/playlists'\r\nimport styled from 'styled-components'\r\nimport { ToastContainer } from 'react-toastify'\r\n\r\nconst Container = styled(BootstrapContainer)``\r\n\r\nconst AppContainer = styled.div`\r\n\tdisplay: flex;\r\n\tflex-flow: column wrap;\r\n\r\n\tpadding-top: ${(props) => (props.isLoggedIn ? '0px' : '200px')};\r\n`\r\nconst ResultsColumn = styled(Col)`\r\n\tmargin-left: 0;\r\n\tbackground-color: #fff;\r\n\tpadding: 20px;\r\n\t@media (max-width: 768px) {\r\n\t\tmargin-top: 10px;\r\n\t}\r\n`\r\n\r\nconst App = () => {\r\n\tconst [playlists, setPlaylists] = useState([])\r\n\tconst [results, setResults] = useState([])\r\n\tconst [isLoggedIn, setIsLoggedIn] = useState(false)\r\n\tconst [isRegistered, setIsRegistered] = useState(true)\r\n\tconst [user, setUser] = useState('')\r\n\tconst [username, setUsername] = useState('')\r\n\tconst [password, setPassword] = useState('')\r\n\r\n\tuseEffect(() => {\r\n\t\tconst loggedUserJSON = window.localStorage.getItem('loggedInUser')\r\n\t\tif (loggedUserJSON) {\r\n\t\t\tconst user = JSON.parse(loggedUserJSON)\r\n\t\t\tsetUser(user)\r\n\t\t\tresultsApi.setToken(user.token)\r\n\t\t\tplaylistsApi.setToken(user.token)\r\n\t\t\tsetIsLoggedIn(true)\r\n\t\t}\r\n\r\n\t\tif (isLoggedIn) {\r\n\t\t\tresultsApi.getAll().then((response) => {\r\n\t\t\t\tsetResults(response.data)\r\n\t\t\t})\r\n\t\t\tplaylistsApi.getAllPlaylists().then((response) => {\r\n\t\t\t\tsetPlaylists(response.data)\r\n\t\t\t})\r\n\t\t} else {\r\n\t\t\tsetPlaylists([])\r\n\t\t}\r\n\t}, [isLoggedIn])\r\n\r\n\tconst mainContainer = (\r\n\t\t<Container fluid='xl' className='main-container'>\r\n\t\t\t<ToastContainer></ToastContainer>\r\n\r\n\t\t\t<Row className='row-2'>\r\n\t\t\t\t<Nav\r\n\t\t\t\t\tisLoggedIn={isLoggedIn}\r\n\t\t\t\t\tsetIsLoggedIn={setIsLoggedIn}\r\n\t\t\t\t\tuser={user}\r\n\t\t\t\t\tsetUser={setUser}\r\n\t\t\t\t/>\r\n\t\t\t</Row>\r\n\r\n\t\t\t<Row xs={12} noGutters={true}>\r\n\t\t\t\t<Side\r\n\t\t\t\t\tplaylists={playlists}\r\n\t\t\t\t\tsetPlaylists={setPlaylists}\r\n\t\t\t\t\tresults={results}\r\n\t\t\t\t\tsetResults={setResults}\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t<ResultsColumn md={8}>\r\n\t\t\t\t\t<Results\r\n\t\t\t\t\t\tplaylists={playlists}\r\n\t\t\t\t\t\tsetPlaylists={setPlaylists}\r\n\t\t\t\t\t\tresults={results}\r\n\t\t\t\t\t\tsetResults={setResults}\r\n\t\t\t\t\t\tuser={user}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</ResultsColumn>\r\n\t\t\t</Row>\r\n\t\t</Container>\r\n\t)\r\n\r\n\treturn (\r\n\t\t<AppContainer isLoggedIn={isLoggedIn}>\r\n\t\t\t{isLoggedIn ? (\r\n\t\t\t\tmainContainer\r\n\t\t\t) : !isRegistered ? (\r\n\t\t\t\t<RegisterForm\r\n\t\t\t\t\tisRegistered={isRegistered}\r\n\t\t\t\t\tsetIsRegistered={setIsRegistered}\r\n\t\t\t\t/>\r\n\t\t\t) : (\r\n\t\t\t\t<LoginForm\r\n\t\t\t\t\tsetUser={setUser}\r\n\t\t\t\t\tisRegistered={isRegistered}\r\n\t\t\t\t\tsetIsRegistered={setIsRegistered}\r\n\t\t\t\t\tisLoggedIn={isLoggedIn}\r\n\t\t\t\t\tsetIsLoggedIn={setIsLoggedIn}\r\n\t\t\t\t\tusername={username}\r\n\t\t\t\t\tsetUsername={setUsername}\r\n\t\t\t\t\tpassword={password}\r\n\t\t\t\t\tsetPassword={setPassword}\r\n\t\t\t\t/>\r\n\t\t\t)}\r\n\t\t</AppContainer>\r\n\t)\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport './index.css'\r\nimport App from './App'\r\nimport 'react-toastify/dist/ReactToastify.css'\r\n// const currentPlaylist = []\r\n\r\n// const results = [\r\n// \t{\r\n// \t\tid: 'song-' + nanoid(),\r\n// \t\tname: 'Gallows Bell',\r\n// \t\tartist: 'Vocaloid',\r\n// \t\tisAdded: false,\r\n// \t\timgSource: 'images/icon.svg',\r\n// \t\tcolor: '#683025ff',\r\n// \t\tlightFont: true\r\n// \t},\r\n// \t{\r\n// \t\tid: 'song-' + nanoid(),\r\n// \t\tname: 'Glow',\r\n// \t\tartist: 'Vocaloid',\r\n// \t\tisAdded: false,\r\n// \t\timgSource: 'images/icon2.svg',\r\n// \t\tcolor: '#855ec6ff',\r\n// \t\tlightFont: true\r\n// \t},\r\n// \t{\r\n// \t\tid: 'song-' + nanoid(),\r\n// \t\tname: 'Hysteria',\r\n// \t\tartist: 'Vocaloid',\r\n// \t\tisAdded: false,\r\n// \t\timgSource: 'images/icon3.svg',\r\n// \t\tcolor: '#5ec3c6ff',\r\n// \t\tlightFont: true,\r\n// \t},\r\n// \t{\r\n// \t\tid: 'song-' + nanoid(),\r\n// \t\tname: 'Mirai e',\r\n// \t\tartist: 'Unknown',\r\n// \t\tisAdded: false,\r\n// \t\timgSource: 'images/icon4.svg',\r\n// \t\tcolor: '#b67855ff',\r\n// \t\tlightFont: true,\r\n// \t},\r\n// \t{\r\n// \t\tid: 'song-' + nanoid(),\r\n// \t\tname: 'Crossroads',\r\n// \t\tartist: 'Vocaloid',\r\n// \t\tisAdded: false,\r\n// \t\timgSource: 'images/icon5.svg',\r\n// \t\tcolor: '#b65599ff',\r\n// \t\tlightFont: false\r\n// \t},\r\n// \t{\r\n// \t\tid: 'song-' + nanoid(),\r\n// \t\tname: 'Now or Never',\r\n// \t\tartist: 'Vocaloid',\r\n// \t\tisAdded: false,\r\n// \t\timgSource: 'images/icon6.svg',\r\n// \t\tcolor: '#5ca7a9ff',\r\n// \t\tlightFont: false\r\n// \t},\r\n// \t{\r\n// \t\tid: 'song-' + nanoid(),\r\n// \t\tname: 'Magenta',\r\n// \t\tartist: 'Vocaloid',\r\n// \t\tisAdded: false,\r\n// \t\timgSource: 'images/icon7.svg',\r\n// \t\tcolor: '#7a7a7aff',\r\n// \t\tlightFont: false\r\n// \t},\r\n// ]\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))\r\n"],"sourceRoot":""}